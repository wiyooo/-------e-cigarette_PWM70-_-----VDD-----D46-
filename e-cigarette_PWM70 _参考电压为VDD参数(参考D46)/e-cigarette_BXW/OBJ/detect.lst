
                    Nyquest Technology Co., Ltd.

NYASM 2.41

    ADDR  OPCODE/VALUE              LINE   TAG  SOURCE                   STATEMENT    

                                    1-    1     ;--------------------------------------------------------
                                    1-    2     ; File Created by SDCC : free open source ISO C Compiler 
                                    1-    3     ; Version 4.2.2 #0 (MSVC)
                                    1-    4     ;--------------------------------------------------------
                                    1-    5     ; NY8A port
                                    1-    6     ;--------------------------------------------------------
                                    1-    7     	.file	"detect.c"
                                    1-    8     	list	p=NY8B062F,c=on
                                    1-    9     	#include "ny8b062f.inc"
                                    2-    2     #include "common.inc"
                                    3-    1     ;; header file for 8 bit series assembly -*- mode:asm; coding:utf-8; -*-
                                    3-    2     ;; author    Ting
                                    3-    3     ;; date      2020-12-24
                                    3-    4     ;;
                                    3-    5     ;; # constant definition
                                    3-    6     ;;
                                    3-    7     ;; ## instruction result store destination
                                    3-    8     ;;  - W: the result is stored in the ACC.
                                    3-    9     ;;  - F: the result is stored back in register.
                                    3-   10     ;; ## flag name in STATUS register
                                    3-   11     ;;  - C, DC, Z
                                    3-   12     ;;
                                    3-   13     ;; # macro define
                                    3-   14     ;;
                                    3-   15     ;; ## RETURN, used by C compiler, end of function
                                    3-   16     ;; ## PAGESEL, empty macro, maybe used by C compiler (bug?)
                                    3-   17     ;; ## BANKSEL, replace by .banksel pseudo command, empty if disable bank.
                                    3-   18     ;; ## MGOTO, replace by LGOTO (ic<=2K word) or FGOTO (ic>2K word)
                                    3-   19     ;; ## MCALL, same as above
                                    3-   20     ;;
                                    3-   21     W       EQU 0
                                    3-   21     ;W = 0
                                    3-   22     F       EQU 1
                                    3-   22     ;F = 1
                                    3-   23     C		EQU	0
                                    3-   23     ;C = 0
                                    3-   24     DC		EQU	1
                                    3-   24     ;DC = 1
                                    3-   25     Z		EQU	2
                                    3-   25     ;Z = 2
                                    3-   28     ;; common register for all series
                                    3-   29     INDF    EQU 0x00
                                    3-   29     ;INDF = 0
                                    3-   30     PCL     EQU 0x02
                                    3-   30     ;PCL = 2
                                    3-   31     STATUS  EQU 0x03
                                    3-   31     ;STATUS = 3
                                    3-   32     FSR     EQU 0x04
                                    3-   32     ;FSR = 4
                                    3-   33     PCHBUF  EQU 0x0A
                                    3-   33     ;PCHBUF = 10
                                    1-   11     ;--------------------------------------------------------
                                    1-   12     ; external declarations
                                    1-   13     ;--------------------------------------------------------
                                    1-   14     	extern	_Detect_OverCurrent_ByIO
                                    1-   15     	extern	_Get_ADC_Value
                                    1-   16     	extern	_ledRun
                                    1-   17     	extern	_Detect_OverCurrent_ByAD
                                    1-   18     	extern	_Get_Onetime_Bat_ADCValue
                                    1-   19     	extern	_Ledbreathing
                                    1-   20     	extern	_LedOff
                                    1-   21     	extern	_SetLedColorNormallyOn
                                    1-   22     	extern	_SetLedBreathingParameters2
                                    1-   23     	extern	_SetLedBreathingParameters
                                    1-   24     	extern	_SetLedFlashParameters
                                    1-   25     	extern	_adc_init4
                                    1-   26     	extern	_adc3_init
                                    1-   27     	extern	_adc2_init
                                    1-   28     	extern	_adc_init
                                    1-   29     	extern	_Delay_N1ms_16bit
                                    1-   30     	extern	_delay
                                    1-   31     	extern	_sleep_handle
                                    1-   32     	extern	_sleep_param_init
                                    1-   33     	extern	_led_handle
                                    1-   34     	extern	_led_param_init
                                    1-   35     	extern	_battery_check
                                    1-   36     	extern	_battery_param_init
                                    1-   37     	extern	_msg_handle
                                    1-   38     	extern	_MicScan
                                    1-   39     	extern	_KeyScan
                                    1-   40     	extern	_key_param_init
                                    1-   41     	extern	_isr_param_init
                                    1-   42     	extern	_common_param_init
                                    1-   43     	extern	_gpio_init
                                    1-   44     	extern	_sleep_init
                                    1-   45     	extern	_system_init
                                    1-   46     	extern	_clear_ram
                                    1-   47     	extern	_multi_16b
                                    1-   48     	extern	_T0MD
                                    1-   49     	extern	_PCON1
                                    1-   50     	extern	_CMPCR
                                    1-   51     	extern	_BODCON
                                    1-   52     	extern	_PS0CV
                                    1-   53     	extern	_APHCON
                                    1-   54     	extern	_IOSTB
                                    1-   55     	extern	_IOSTA
                                    1-   56     	extern	_PWM4DUTY
                                    1-   57     	extern	_P4CR1
                                    1-   58     	extern	_BZ3CR
                                    1-   59     	extern	_PS3CV
                                    1-   60     	extern	_PWM3DUTY
                                    1-   61     	extern	_T3CR2
                                    1-   62     	extern	_T3CR1
                                    1-   63     	extern	_TMR3
                                    1-   64     	extern	_OSCCR
                                    1-   65     	extern	_BZ2CR
                                    1-   66     	extern	_PS2CV
                                    1-   67     	extern	_PWM2DUTY
                                    1-   68     	extern	_T2CR2
                                    1-   69     	extern	_T2CR1
                                    1-   70     	extern	_TMR2
                                    1-   71     	extern	_TBHD
                                    1-   72     	extern	_TBHP
                                    1-   73     	extern	_IRCR
                                    1-   74     	extern	_BZ1CR
                                    1-   75     	extern	_PS1CV
                                    1-   76     	extern	_PWM1DUTY
                                    1-   77     	extern	_T1CR2
                                    1-   78     	extern	_T1CR1
                                    1-   79     	extern	_TMR1
                                    1-   80     	extern	_ADD
                                    1-   81     	extern	_PCHBUF
                                    1-   82     	extern	_STATUS
                                    1-   83     	extern	_PCL
                                    1-   84     	extern	_TMR0
                                    1-   85     	extern	_temptimecount
                                    1-   86     	extern	_sleep_delay_keep_time
                                    1-   87     	extern	_running_keep_time
                                    1-   88     	extern	_usb_flag
                                    1-   89     	extern	_HeatingKeepTime
                                    1-   90     	extern	_KeyDowmTimeCount
                                    1-   91     	extern	_VolTypeIndex
                                    1-   92     	extern	_BatVolLevel
                                    1-   93     	extern	_SaveHeaterIOStatus
                                    1-   94     	extern	_MotorDutySet
                                    1-   95     	extern	_NowMotorDuty
                                    1-   96     	extern	_BuleLed_delay_keep_time
                                    1-   97     	extern	_OverCurrentCount
                                    1-   98     	extern	_OverCurrentDelayTime
                                    1-   99     	extern	_led_delay_keep_time
                                    1-  100     	extern	_led_flash_count
                                    1-  101     	extern	_led_flash_flag
                                    1-  102     	extern	_percent_nun
                                    1-  103     	extern	_PwmCycleCount
                                    1-  104     	extern	_sleepCnt
                                    1-  105     	extern	_Led_Breathe_count
                                    1-  106     	extern	_LedShowKeepTime
                                    1-  107     	extern	_LedShowStep
                                    1-  108     	extern	_GroupColourIndex
                                    1-  109     	extern	_ledRunStarStep
                                    1-  110     	extern	_ledRunStep
                                    1-  111     	extern	_nowLedMode
                                    1-  112     	extern	_CodeSwitchIndex
                                    1-  113     	extern	_msg
                                    1-  114     	extern	_INTE2bits
                                    1-  115     	extern	_TM3RHbits
                                    1-  116     	extern	_RFCbits
                                    1-  117     	extern	_ANAENbits
                                    1-  118     	extern	_TMRHbits
                                    1-  119     	extern	_INTEDGbits
                                    1-  120     	extern	_ADJMDbits
                                    1-  121     	extern	_PACONbits
                                    1-  122     	extern	_AWUCONbits
                                    1-  123     	extern	_ADCRbits
                                    1-  124     	extern	_ADVREFHbits
                                    1-  125     	extern	_ADRbits
                                    1-  126     	extern	_ADMDbits
                                    1-  127     	extern	_INTFbits
                                    1-  128     	extern	_INTEbits
                                    1-  129     	extern	_BPHCONbits
                                    1-  130     	extern	_ABPLCONbits
                                    1-  131     	extern	_BWUCONbits
                                    1-  132     	extern	_PCONbits
                                    1-  133     	extern	_PORTBbits
                                    1-  134     	extern	_PORTAbits
                                    1-  136     	extern PSAVE
                                    1-  137     	extern SSAVE
                                    1-  138     	extern WSAVE
                                    1-  139     	extern STK12
                                    1-  140     	extern STK11
                                    1-  141     	extern STK10
                                    1-  142     	extern STK09
                                    1-  143     	extern STK08
                                    1-  144     	extern STK07
                                    1-  145     	extern STK06
                                    1-  146     	extern STK05
                                    1-  147     	extern STK04
                                    1-  148     	extern STK03
                                    1-  149     	extern STK02
                                    1-  150     	extern STK01
                                    1-  151     	extern STK00
                                    1-  152     ;--------------------------------------------------------
                                    1-  153     ; global declarations
                                    1-  154     ;--------------------------------------------------------
                                    1-  155     	extern	_HeaterExistdetect
                                    1-  156     	extern	_Get_Bat_ChrgBat_ADCValue
                                    1-  157     	extern	_AdjustHeatPwm
                                    1-  158     	extern	_Get_adc_data
                                    1-  159     	extern	_getAbs
                                    1-  160     	extern	_NOP10_
                                    1-  161     	extern	_sys_flag_3
                                    1-  162     	extern	_sys_flag_2
                                    1-  163     	extern	_sys_flag_1
                                    1-  164     	extern	_sys_flag_0
                                    1-  165     	extern	_INTE2
                                    1-  166     	extern	_TM3RH
                                    1-  167     	extern	_RFC
                                    1-  168     	extern	_ANAEN
                                    1-  169     	extern	_TMRH
                                    1-  170     	extern	_INTEDG
                                    1-  171     	extern	_ADJMD
                                    1-  172     	extern	_PACON
                                    1-  173     	extern	_AWUCON
                                    1-  174     	extern	_ADCR
                                    1-  175     	extern	_ADVREFH
                                    1-  176     	extern	_ADR
                                    1-  177     	extern	_ADMD
                                    1-  178     	extern	_INTF
                                    1-  179     	extern	_INTE
                                    1-  180     	extern	_BPHCON
                                    1-  181     	extern	_ABPLCON
                                    1-  182     	extern	_BWUCON
                                    1-  183     	extern	_PCON
                                    1-  184     	extern	_PORTB
                                    1-  185     	extern	_PORTA
                                    1-  186     	extern	_g_u16ADCvalue
                                    1-  187     	extern	_g_u8ReadAdcCount
                                    1-  188     	extern	_disp_delay_time_cnt
                                    1-  189     	extern	_now_ch
                                    1-  190     	extern	_battery_low_cnt
                                    1-  191     	extern	_HeatPlugInsert_flag
                                    1-  192     	extern	_HeatPlugInsertTimeCount
                                    1-  193     	extern	_HeatCount
                                    1-  194     	extern	_SmokeState
                                    1-  195     	extern	_SmokingKeepTime
                                    1-  196     	extern	_TargetMotorDuty
                                    1-  197     	extern	_usb_check_ad_time_cnt
                                    1-  198     	extern	_OverCurrent_adc_value
                                    1-  199     	extern	_OverCurrent_check_cnt
                                    1-  200     	extern	_Bat_adc_value
                                    1-  201     	extern	_Bat_check_cnt
                                    1-  202     	extern	_gAdcDataValueBak
                                    1-  203     	extern	_gAdcDataValue
                                    1-  204     	extern	_TmpAdcDataValue
                                    1-  205     	extern	_ChrgFullTimeCount
                                    1-  206     	extern	_Heat_Off_time_count
                                    1-  207     	extern	_Heat_On_time_count
                                    1-  208     	extern	_Chrg_Off_time_count
                                    1-  209     	extern	_Chrg_On_time_count
                                    1-  210     	extern	_detect_param_init
                                    1-  211     	extern	_ADC_Convert_Pre
                                    1-  212     	extern	_F_wait_eoc
                                    1-  213     	extern	_adc_get
                                    1-  214     	extern	_BaseBatSetPWMValue
                                    1-  215     	extern	_charge_check_by_IO
                                    1-  216     	extern	_bat_lvd_check
                                    1-  217     	extern	_SmokeFun
                                    1-  219     ;--------------------------------------------------------
                                    1-  220     ; global definitions
                                    1-  221     ;--------------------------------------------------------
                                    1-  222     .segment "uninit"
     0000                           1-  223     _Chrg_On_time_count:
                                    1-  224     	.res 1
                                    1-  227     .segment "uninit"
     0000                           1-  228     _Chrg_Off_time_count:
                                    1-  229     	.res 1
                                    1-  232     .segment "uninit"
     0000                           1-  233     _Heat_On_time_count:
                                    1-  234     	.res 1
                                    1-  237     .segment "uninit"
     0000                           1-  238     _Heat_Off_time_count:
                                    1-  239     	.res 1
                                    1-  242     .segment "uninit"
     0000                           1-  243     _ChrgFullTimeCount:
                                    1-  244     	.res 2
                                    1-  247     .segment "uninit"
     0000                           1-  248     _TmpAdcDataValue:
                                    1-  249     	.res 2
                                    1-  252     .segment "uninit"
     0000                           1-  253     _gAdcDataValue:
                                    1-  254     	.res 2
                                    1-  257     .segment "uninit"
     0000                           1-  258     _gAdcDataValueBak:
                                    1-  259     	.res 2
                                    1-  262     .segment "uninit"
     0000                           1-  263     _Bat_check_cnt:
                                    1-  264     	.res 1
                                    1-  267     .segment "uninit"
     0000                           1-  268     _Bat_adc_value:
                                    1-  269     	.res 2
                                    1-  272     .segment "uninit"
     0000                           1-  273     _OverCurrent_check_cnt:
                                    1-  274     	.res 1
                                    1-  277     .segment "uninit"
     0000                           1-  278     _OverCurrent_adc_value:
                                    1-  279     	.res 2
                                    1-  282     .segment "uninit"
     0000                           1-  283     _usb_check_ad_time_cnt:
                                    1-  284     	.res 1
                                    1-  287     .segment "uninit"
     0000                           1-  288     _TargetMotorDuty:
                                    1-  289     	.res 1
                                    1-  292     .segment "uninit"
     0000                           1-  293     _SmokingKeepTime:
                                    1-  294     	.res 2
                                    1-  297     .segment "uninit"
     0000                           1-  298     _SmokeState:
                                    1-  299     	.res 1
                                    1-  302     .segment "uninit"
     0000                           1-  303     _HeatCount:
                                    1-  304     	.res 1
                                    1-  307     .segment "uninit"
     0000                           1-  308     _HeatPlugInsertTimeCount:
                                    1-  309     	.res 2
                                    1-  312     .segment "uninit"
     0000                           1-  313     _HeatPlugInsert_flag:
                                    1-  314     	.res 1
                                    1-  317     .segment "uninit"
     0000                           1-  318     _battery_low_cnt:
                                    1-  319     	.res 1
                                    1-  322     ;--------------------------------------------------------
                                    1-  323     ; absolute symbol definitions
                                    1-  324     ;--------------------------------------------------------
                                    1-  325     ;--------------------------------------------------------
                                    1-  326     ; compiler-defined variables
                                    1-  327     ;--------------------------------------------------------
                                    1-  328     .segment "uninit"
     0000                           1-  329     r0x102E:
                                    1-  330     	.res	1
                                    1-  331     .segment "uninit"
     0000                           1-  332     r0x103E:
                                    1-  333     	.res	1
                                    1-  334     .segment "uninit"
     0000                           1-  335     r0x103D:
                                    1-  336     	.res	1
                                    1-  337     .segment "uninit"
     0000                           1-  338     r0x1040:
                                    1-  339     	.res	1
                                    1-  340     .segment "uninit"
     0000                           1-  341     r0x103F:
                                    1-  342     	.res	1
                                    1-  343     .segment "uninit"
     0000                           1-  344     r0x1041:
                                    1-  345     	.res	1
                                    1-  346     .segment "uninit"
     0000                           1-  347     r0x1042:
                                    1-  348     	.res	1
                                    1-  349     .segment "uninit"
     0000                           1-  350     r0x1034:
                                    1-  351     	.res	1
                                    1-  352     .segment "uninit"
     0000                           1-  353     r0x1035:
                                    1-  354     	.res	1
                                    1-  355     .segment "uninit"
     0000                           1-  356     r0x1036:
                                    1-  357     	.res	1
                                    1-  358     .segment "uninit"
     0000                           1-  359     r0x1037:
                                    1-  360     	.res	1
                                    1-  361     .segment "uninit"
     0000                           1-  362     r0x1038:
                                    1-  363     	.res	1
                                    1-  364     .segment "uninit"
     0000                           1-  365     r0x103A:
                                    1-  366     	.res	1
                                    1-  367     .segment "uninit"
     0000                           1-  368     r0x1039:
                                    1-  369     	.res	1
                                    1-  370     .segment "uninit"
     0000                           1-  371     r0x103C:
                                    1-  372     	.res	1
                                    1-  373     .segment "uninit"
     0000                           1-  374     r0x1025:
                                    1-  375     	.res	1
                                    1-  376     .segment "uninit"
     0000                           1-  377     r0x1026:
                                    1-  378     	.res	1
                                    1-  379     .segment "uninit"
     0000                           1-  380     r0x1027:
                                    1-  381     	.res	1
                                    1-  382     .segment "uninit"
     0000                           1-  383     r0x1029:
                                    1-  384     	.res	1
                                    1-  385     .segment "uninit"
     0000                           1-  386     r0x1028:
                                    1-  387     	.res	1
                                    1-  388     .segment "uninit"
     0000                           1-  389     r0x102F:
                                    1-  390     	.res	1
                                    1-  391     .segment "uninit"
     0000                           1-  392     r0x1030:
                                    1-  393     	.res	1
                                    1-  394     .segment "uninit"
     0000                           1-  395     r0x1033:
                                    1-  396     	.res	1
                                    1-  397     .segment "uninit"
     0000                           1-  398     r0x102C:
                                    1-  399     	.res	1
                                    1-  400     .segment "uninit"
     0000                           1-  401     r0x102B:
                                    1-  402     	.res	1
                                    1-  403     ;--------------------------------------------------------
                                    1-  404     ; initialized data
                                    1-  405     ;--------------------------------------------------------
                                    1-  407     .segment "idata"
     0000                           1-  408     _now_ch:
     0000 0001                      1-  411     	dw	0x01	; 1
                                    1-  414     .segment "idata"
     0000                           1-  415     _disp_delay_time_cnt:
     0000 0000                      1-  418     	dw	0x00	; 0
                                    1-  421     .segment "idata"
     0000                           1-  422     _g_u8ReadAdcCount:
     0000 0000                      1-  425     	dw	0x00	; 0
                                    1-  428     .segment "idata"
     0000                           1-  429     _g_u16ADCvalue:
     0000 0000 0000                 1-  432     	dw	0x00, 0x00	; 0
                                    1-  435     .segment "idata"
     0000                           1-  436     _s_u16MostValue:
     0000 0000 0000                 1-  439     	dw	0x00, 0x00	; 0
                                    1-  442     .segment "idata"
     0000                           1-  443     _s_u16LeastValue:
     0000 0000 0000                 1-  446     	dw	0x00, 0x00	; 0
                                    1-  449     .segment "idata"
     0000                           1-  450     _s_u16Sum:
     0000 0000 0000                 1-  453     	dw	0x00, 0x00	; 0
                                    1-  455     ;--------------------------------------------------------
                                    1-  456     ; initialized absolute data
                                    1-  457     ;--------------------------------------------------------
                                    1-  458     ;--------------------------------------------------------
                                    1-  459     ; overlayable items in internal ram 
                                    1-  460     ;--------------------------------------------------------
                                    1-  461     ;	udata_ovr
                                    1-  462     ;--------------------------------------------------------
                                    1-  463     ; code
                                    1-  464     ;--------------------------------------------------------
                                    1-  465     ; code_detect	code
                                    1-  466     ;***
                                    1-  467     ;  pBlock Stats: dbName = C
                                    1-  468     ;***
                                    1-  469     ;has an exit
                                    1-  470     ;functions called:
                                    1-  471     ;   _adc_init4
                                    1-  472     ;   _adc_get
                                    1-  473     ;   _adc_init4
                                    1-  474     ;   _adc_get
                                    1-  475     ;   _adc_get
                                    1-  476     ;   _adc_init4
                                    1-  477     ;   _adc_get
                                    1-  478     ;   _BaseBatSetPWMValue
                                    1-  479     ;   _SetLedBreathingParameters2
                                    1-  480     ;   _LedOff
                                    1-  481     ;   _BaseBatSetPWMValue
                                    1-  482     ;   _adc_init4
                                    1-  483     ;   _adc_get
                                    1-  484     ;   _adc_init4
                                    1-  485     ;   _adc_get
                                    1-  486     ;   _adc_get
                                    1-  487     ;   _adc_init4
                                    1-  488     ;   _adc_get
                                    1-  489     ;   _BaseBatSetPWMValue
                                    1-  490     ;   _SetLedBreathingParameters2
                                    1-  491     ;   _LedOff
                                    1-  492     ;   _BaseBatSetPWMValue
                                    1-  493     ;1 compiler assigned register :
                                    1-  494     ;   STK00
                                    1-  495     ;; Starting pCode block
                                    1-  496     .segment "code"; module=detect, function=_SmokeFun
     0000                           1-  498     _SmokeFun:
                                    1-  499     ; 2 exit points
                                    1-  500     	.line	995, "detect.c"; 	switch(SmokeState)
                                    1-  501     	BANKSEL	_SmokeState
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1-  502     	MOVR	_SmokeState,W
     0002 0D03                      1-  503     	BTRSC	STATUS,2
                                    1-  504     	MGOTO	_02292_DS_
     0003 3rrr                      3-   62 m1      LGOTO rom_address
     0004 01rr                      1-  505     	MOVR	_SmokeState,W
     0005 2401                      1-  506     	XORIA	0x01
     0006 0D03                      1-  507     	BTRSC	STATUS,2
                                    1-  508     	MGOTO	_02314_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008 01rr                      1-  509     	MOVR	_SmokeState,W
     0009 2402                      1-  510     	XORIA	0x02
     000A 0D03                      1-  511     	BTRSC	STATUS,2
                                    1-  512     	MGOTO	_02315_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
     000C 01rr                      1-  513     	MOVR	_SmokeState,W
     000D 2403                      1-  514     	XORIA	0x03
     000E 0D03                      1-  515     	BTRSC	STATUS,2
                                    1-  516     	MGOTO	_02324_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010 01rr                      1-  517     	MOVR	_SmokeState,W
     0011 2404                      1-  518     	XORIA	0x04
     0012 0D03                      1-  519     	BTRSC	STATUS,2
                                    1-  520     	MGOTO	_02328_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
     0014 01rr                      1-  521     	MOVR	_SmokeState,W
     0015 2405                      1-  522     	XORIA	0x05
     0016 0D03                      1-  523     	BTRSC	STATUS,2
                                    1-  524     	MGOTO	_02336_DS_
     0017 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  525     	MGOTO	_02343_DS_
     0018 3rrr                      3-   62 m1      LGOTO rom_address
     0019                           1-  526     _02292_DS_:
                                    1-  527     	.line	998, "detect.c"; 	if(b_pause_chrg)
                                    1-  528     	BANKSEL	_sys_flag_2
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 0Brr                      1-  529     	BTRSS	_sys_flag_2,7
                                    1-  530     	MGOTO	_02294_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  531     	.line	1000, "detect.c"; 	b_pause_chrg = 0;
     001C 1Frr                      1-  532     	BCR	_sys_flag_2,7
                                    1-  533     	.line	1001, "detect.c"; 	EN_RESUME_CHRG;//充电状态下吸烟停止时恢复充电电流
     001D 1Err                      1-  534     	BCR	_PORTAbits,5
     001E                           1-  535     _02294_DS_:
                                    1-  536     	.line	1003, "detect.c"; 	if(b_smoking)
                                    1-  537     	BANKSEL	_sys_flag_1
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 0Crr                      1-  538     	BTRSC	_sys_flag_1,1
                                    1-  539     	MGOTO	_02343_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  540     	.line	1005, "detect.c"; 	if(f_charging)
                                    1-  541     	BANKSEL	_sys_flag_0
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 0Brr                      1-  542     	BTRSS	_sys_flag_0,6
                                    1-  543     	MGOTO	_02343_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  544     	.line	1007, "detect.c"; 	f_battery_low = 0;
     0024 1Err                      1-  545     	BCR	_sys_flag_0,5
                                    1-  546     	.line	1009, "detect.c"; 	if(f_charge_full)
     0025 0Err                      1-  547     	BTRSC	_sys_flag_0,4
                                    1-  548     	MGOTO	_02343_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  549     	.line	1013, "detect.c"; 	if(f_1s_chrg_TimeOut)//100ms
                                    1-  550     	BANKSEL	_sys_flag_3
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 0Brr                      1-  551     	BTRSS	_sys_flag_3,7
                                    1-  552     	MGOTO	_02343_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  553     	.line	1015, "detect.c"; 	f_1s_chrg_TimeOut = 0;
     002A 1Frr                      1-  554     	BCR	_sys_flag_3,7
                                    1-  555     	.line	1016, "detect.c"; 	if(now_ch != Quarter_VDD)
                                    1-  556     	BANKSEL	_now_ch
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 01rr                      1-  557     	MOVR	_now_ch,W
     002D 2401                      1-  558     	XORIA	0x01
     002E 0D03                      1-  559     	BTRSC	STATUS,2
                                    1-  560     	MGOTO	_02300_DS_
     002F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  561     	.line	1018, "detect.c"; 	adc_init4(ADC_CHANNEL2);
     0030 2103                      1-  562     	MOVIA	0x03
                                    1-  563     	MCALL	_adc_init4
     0031 2rrr                      3-   65 m1      LCALL rom_address
     0032                           1-  564     _02300_DS_:
                                    1-  565     	.line	1020, "detect.c"; 	gAdcDataValueBak = adc_get(C_Quarter_VDD);
     0032 210B                      1-  566     	MOVIA	0x0b
                                    1-  567     	MCALL	_adc_get
     0033 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  568     	BANKSEL	_gAdcDataValueBak
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 00rr                      1-  569     	MOVAR	(_gAdcDataValueBak + 1)
     0036 01rr                      1-  570     	MOVR	STK00,W
     0037 00rr                      1-  571     	MOVAR	_gAdcDataValueBak
                                    1-  572     ;;unsigned compare: left < lit(0x83D=2109), size=2
                                    1-  573     	.line	1022, "detect.c"; 	if(gAdcDataValueBak >= BAT_VOL4P12_ADC_VALUE)//BAT_VOL4P18_ADC_VALUE
     0038 213D                      1-  574     	MOVIA	0x3d
     0039 04rr                      1-  575     	SUBAR	_gAdcDataValueBak,W
     003A 2108                      1-  576     	MOVIA	0x08
     003B 35rr                      1-  577     	SBCAR	(_gAdcDataValueBak + 1),W
     003C 0803                      1-  578     	BTRSS	STATUS,0
                                    1-  579     	MGOTO	_02308_DS_
     003D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  580     	.line	1024, "detect.c"; 	usb_check_ad_time_cnt = 0;
                                    1-  581     	BANKSEL	_usb_check_ad_time_cnt
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 02rr                      1-  582     	CLRR	_usb_check_ad_time_cnt
                                    1-  583     	.line	1025, "detect.c"; 	ChrgFullTimeCount++;
                                    1-  584     	BANKSEL	_ChrgFullTimeCount
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 05rr                      1-  585     	INCR	_ChrgFullTimeCount,F
     0042 0D03                      1-  586     	BTRSC	STATUS,2
     0043 05rr                      1-  587     	INCR	(_ChrgFullTimeCount + 1),F
                                    1-  588     ;;unsigned compare: left < lit(0x14=20), size=2
                                    1-  589     	.line	1026, "detect.c"; 	if(ChrgFullTimeCount >= 20)//达到阈值后继续统计
     0044 2114                      1-  590     	MOVIA	0x14
     0045 04rr                      1-  591     	SUBAR	_ChrgFullTimeCount,W
     0046 2100                      1-  592     	MOVIA	0x00
     0047 35rr                      1-  593     	SBCAR	(_ChrgFullTimeCount + 1),W
     0048 0803                      1-  594     	BTRSS	STATUS,0
                                    1-  595     	MGOTO	_02343_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  596     	.line	1028, "detect.c"; 	ChrgFullTimeCount = 0;
     004A 02rr                      1-  597     	CLRR	_ChrgFullTimeCount
     004B 02rr                      1-  598     	CLRR	(_ChrgFullTimeCount + 1)
                                    1-  599     	.line	1029, "detect.c"; 	f_charge_full = 1;
                                    1-  600     	BANKSEL	_sys_flag_0
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 1Arr                      1-  601     	BSR	_sys_flag_0,4
                                    1-  602     	.line	1030, "detect.c"; 	msg = MSG_CHRG_FULL;
     004E 2107                      1-  603     	MOVIA	0x07
                                    1-  604     	BANKSEL	_msg
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 00rr                      1-  605     	MOVAR	_msg
                                    1-  606     	MGOTO	_02343_DS_
     0051 3rrr                      3-   62 m1      LGOTO rom_address
     0052                           1-  607     _02308_DS_:
                                    1-  608     	.line	1035, "detect.c"; 	ChrgFullTimeCount = 0;
                                    1-  609     	BANKSEL	_ChrgFullTimeCount
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 02rr                      1-  610     	CLRR	_ChrgFullTimeCount
     0054 02rr                      1-  611     	CLRR	(_ChrgFullTimeCount + 1)
                                    1-  612     	.line	1036, "detect.c"; 	usb_check_ad_time_cnt++;
                                    1-  613     	BANKSEL	_usb_check_ad_time_cnt
     0055 rrrr                      3-  109 m1      .banksel ram_address
     0056 05rr                      1-  614     	INCR	_usb_check_ad_time_cnt,F
                                    1-  615     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  616     ;;unsigned compare: left >= lit(0x15=21), size=1
                                    1-  617     	.line	1037, "detect.c"; 	if(usb_check_ad_time_cnt > 20)
     0057 2115                      1-  618     	MOVIA	0x15
     0058 04rr                      1-  619     	SUBAR	_usb_check_ad_time_cnt,W
     0059 0803                      1-  620     	BTRSS	STATUS,0
                                    1-  621     	MGOTO	_02343_DS_
     005A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  622     	.line	1039, "detect.c"; 	usb_check_ad_time_cnt = 0;
     005B 02rr                      1-  623     	CLRR	_usb_check_ad_time_cnt
                                    1-  624     	.line	1040, "detect.c"; 	if(f_charge_full)
                                    1-  625     	BANKSEL	_sys_flag_0
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 0Arr                      1-  626     	BTRSS	_sys_flag_0,4
                                    1-  627     	MGOTO	_02343_DS_
     005E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  628     	.line	1042, "detect.c"; 	f_charge_full = 0;
     005F 1Err                      1-  629     	BCR	_sys_flag_0,4
                                    1-  630     	.line	1043, "detect.c"; 	msg = MSG_CHRG;//插入USB充电
     0060 2103                      1-  631     	MOVIA	0x03
                                    1-  632     	BANKSEL	_msg
     0061 rrrr                      3-  109 m1      .banksel ram_address
     0062 00rr                      1-  633     	MOVAR	_msg
                                    1-  634     	.line	1050, "detect.c"; 	break;
                                    1-  635     	MGOTO	_02343_DS_
     0063 3rrr                      3-   62 m1      LGOTO rom_address
     0064                           1-  636     _02314_DS_:
                                    1-  637     	.line	1053, "detect.c"; 	b_heater_detect_mask = 1;
                                    1-  638     	BANKSEL	_sys_flag_2
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 1Arr                      1-  639     	BSR	_sys_flag_2,5
                                    1-  640     	.line	1055, "detect.c"; 	adc_init4(Quarter_VDD);
     0066 2101                      1-  641     	MOVIA	0x01
                                    1-  642     	MCALL	_adc_init4
     0067 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  643     	.line	1056, "detect.c"; 	SmokeState = STATE_SMOKE_CHECK_BAT_LOW;
     0068 2102                      1-  644     	MOVIA	0x02
                                    1-  645     	BANKSEL	_SmokeState
     0069 rrrr                      3-  109 m1      .banksel ram_address
     006A 00rr                      1-  646     	MOVAR	_SmokeState
                                    1-  647     	.line	1057, "detect.c"; 	break;
                                    1-  648     	MGOTO	_02343_DS_
     006B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  649     ;;unsigned compare: left < lit(0x14=20), size=1
     006C                           1-  650     _02315_DS_:
                                    1-  651     	.line	1060, "detect.c"; 	if(disp_delay_time_cnt < 20)
     006C 2114                      1-  652     	MOVIA	0x14
                                    1-  653     	BANKSEL	_disp_delay_time_cnt
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 04rr                      1-  654     	SUBAR	_disp_delay_time_cnt,W
     006F 0C03                      1-  655     	BTRSC	STATUS,0
                                    1-  656     	MGOTO	_02317_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  657     	.line	1062, "detect.c"; 	gAdcDataValueBak = adc_get(C_Quarter_VDD);
     0071 210B                      1-  658     	MOVIA	0x0b
                                    1-  659     	MCALL	_adc_get
     0072 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  660     	BANKSEL	_gAdcDataValueBak
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 00rr                      1-  661     	MOVAR	(_gAdcDataValueBak + 1)
     0075 01rr                      1-  662     	MOVR	STK00,W
     0076 00rr                      1-  663     	MOVAR	_gAdcDataValueBak
                                    1-  664     	.line	1063, "detect.c"; 	gAdcDataValueBak = gAdcDataValueBak + 20;
     0077 2114                      1-  665     	MOVIA	0x14
     0078 03rr                      1-  666     	ADDAR	_gAdcDataValueBak,F
     0079 2100                      1-  667     	MOVIA	0x00
     007A 34rr                      1-  668     	ADCAR	(_gAdcDataValueBak + 1),F
     007B                           1-  669     _02317_DS_:
                                    1-  670     	.line	1065, "detect.c"; 	if(f_charging)
                                    1-  671     	BANKSEL	_sys_flag_0
     007B rrrr                      3-  109 m1      .banksel ram_address
     007C 0Brr                      1-  672     	BTRSS	_sys_flag_0,6
                                    1-  673     	MGOTO	_02319_DS_
     007D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  674     	.line	1067, "detect.c"; 	SmokeState = STATE_SMOKE_CHECK_OC;
     007E 2103                      1-  675     	MOVIA	0x03
                                    1-  676     	BANKSEL	_SmokeState
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 00rr                      1-  677     	MOVAR	_SmokeState
                                    1-  678     	.line	1068, "detect.c"; 	break;
                                    1-  679     	MGOTO	_02343_DS_
     0081 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  680     ;;unsigned compare: left < lit(0x6E6=1766), size=2
     0082                           1-  681     _02319_DS_:
                                    1-  682     	.line	1074, "detect.c"; 	if((gAdcDataValueBak < BAT_VOL3P45_ADC_VALUE)||f_battery_low)//BAT_VOL3P40_ADC_VALUE
     0082 21E6                      1-  683     	MOVIA	0xe6
                                    1-  684     	BANKSEL	_gAdcDataValueBak
     0083 rrrr                      3-  109 m1      .banksel ram_address
     0084 04rr                      1-  685     	SUBAR	_gAdcDataValueBak,W
     0085 2106                      1-  686     	MOVIA	0x06
     0086 35rr                      1-  687     	SBCAR	(_gAdcDataValueBak + 1),W
     0087 0803                      1-  688     	BTRSS	STATUS,0
                                    1-  689     	MGOTO	_02320_DS_
     0088 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  690     	BANKSEL	_sys_flag_0
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 0Arr                      1-  691     	BTRSS	_sys_flag_0,5
                                    1-  692     	MGOTO	_02321_DS_
     008B 3rrr                      3-   62 m1      LGOTO rom_address
     008C                           1-  693     _02320_DS_:
                                    1-  694     	.line	1077, "detect.c"; 	msg = MSG_LVD;
     008C 2108                      1-  695     	MOVIA	0x08
                                    1-  696     	BANKSEL	_msg
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 00rr                      1-  697     	MOVAR	_msg
                                    1-  698     	.line	1079, "detect.c"; 	b_smoke_init = 0;
                                    1-  699     	BANKSEL	_sys_flag_0
     008F rrrr                      3-  109 m1      .banksel ram_address
     0090 1Crr                      1-  700     	BCR	_sys_flag_0,1
                                    1-  701     	MGOTO	_02343_DS_
     0091 3rrr                      3-   62 m1      LGOTO rom_address
     0092                           1-  702     _02321_DS_:
                                    1-  703     	.line	1084, "detect.c"; 	SmokeState = STATE_SMOKE_CHECK_OC;
     0092 2103                      1-  704     	MOVIA	0x03
                                    1-  705     	BANKSEL	_SmokeState
     0093 rrrr                      3-  109 m1      .banksel ram_address
     0094 00rr                      1-  706     	MOVAR	_SmokeState
                                    1-  707     	.line	1089, "detect.c"; 	break;
                                    1-  708     	MGOTO	_02343_DS_
     0095 3rrr                      3-   62 m1      LGOTO rom_address
     0096                           1-  709     _02324_DS_:
                                    1-  710     	.line	1092, "detect.c"; 	b_heater_detect_mask = 1;
                                    1-  711     	BANKSEL	_sys_flag_2
     0096 rrrr                      3-  109 m1      .banksel ram_address
     0097 1Arr                      1-  712     	BSR	_sys_flag_2,5
                                    1-  713     	.line	1093, "detect.c"; 	gAdcDataValue = adc_get(C_ADC_PA0);
     0098 2100                      1-  714     	MOVIA	0x00
                                    1-  715     	MCALL	_adc_get
     0099 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  716     	BANKSEL	_gAdcDataValue
     009A rrrr                      3-  109 m1      .banksel ram_address
     009B 00rr                      1-  717     	MOVAR	(_gAdcDataValue + 1)
     009C 01rr                      1-  718     	MOVR	STK00,W
     009D 00rr                      1-  719     	MOVAR	_gAdcDataValue
                                    1-  720     	.line	1094, "detect.c"; 	b_heater_detect_mask = 0;
                                    1-  721     	BANKSEL	_sys_flag_2
     009E rrrr                      3-  109 m1      .banksel ram_address
     009F 1Err                      1-  722     	BCR	_sys_flag_2,5
                                    1-  723     ;;unsigned compare: left < lit(0xBB8=3000), size=2
                                    1-  724     	.line	1097, "detect.c"; 	if(gAdcDataValue >= 3000)//4000
     00A0 21B8                      1-  725     	MOVIA	0xb8
                                    1-  726     	BANKSEL	_gAdcDataValue
     00A1 rrrr                      3-  109 m1      .banksel ram_address
     00A2 04rr                      1-  727     	SUBAR	_gAdcDataValue,W
     00A3 210B                      1-  728     	MOVIA	0x0b
     00A4 35rr                      1-  729     	SBCAR	(_gAdcDataValue + 1),W
     00A5 0803                      1-  730     	BTRSS	STATUS,0
                                    1-  731     	MGOTO	_02326_DS_
     00A6 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  732     	.line	1101, "detect.c"; 	msg = MSG_CURRENT_OVER;
     00A7 2109                      1-  733     	MOVIA	0x09
                                    1-  734     	BANKSEL	_msg
     00A8 rrrr                      3-  109 m1      .banksel ram_address
     00A9 00rr                      1-  735     	MOVAR	_msg
                                    1-  736     	.line	1102, "detect.c"; 	b_smoke_init = 0;
                                    1-  737     	BANKSEL	_sys_flag_0
     00AA rrrr                      3-  109 m1      .banksel ram_address
     00AB 1Crr                      1-  738     	BCR	_sys_flag_0,1
                                    1-  739     	MGOTO	_02343_DS_
     00AC 3rrr                      3-   62 m1      LGOTO rom_address
     00AD                           1-  740     _02326_DS_:
                                    1-  741     	.line	1106, "detect.c"; 	SmokeState = STATE_SMOKE_PARAM_SET;
     00AD 2104                      1-  742     	MOVIA	0x04
                                    1-  743     	BANKSEL	_SmokeState
     00AE rrrr                      3-  109 m1      .banksel ram_address
     00AF 00rr                      1-  744     	MOVAR	_SmokeState
                                    1-  745     	.line	1111, "detect.c"; 	break;
                                    1-  746     	MGOTO	_02343_DS_
     00B0 3rrr                      3-   62 m1      LGOTO rom_address
     00B1                           1-  747     _02328_DS_:
                                    1-  748     	.line	1117, "detect.c"; 	adc_init4(ADC_CHANNEL2);
     00B1 2103                      1-  749     	MOVIA	0x03
                                    1-  750     	MCALL	_adc_init4
     00B2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  751     	.line	1118, "detect.c"; 	adc_get(C_ADC_PA0);
     00B3 2100                      1-  752     	MOVIA	0x00
                                    1-  753     	MCALL	_adc_get
     00B4 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  754     	.line	1119, "detect.c"; 	b_smoke_init = 0;//初始化结束	
                                    1-  755     	BANKSEL	_sys_flag_0
     00B5 rrrr                      3-  109 m1      .banksel ram_address
     00B6 1Crr                      1-  756     	BCR	_sys_flag_0,1
                                    1-  757     	.line	1120, "detect.c"; 	b_smoking = 1;//设置吸烟开始标志
                                    1-  758     	BANKSEL	_sys_flag_1
     00B7 rrrr                      3-  109 m1      .banksel ram_address
     00B8 18rr                      1-  759     	BSR	_sys_flag_1,1
                                    1-  760     	.line	1122, "detect.c"; 	LedShowKeepTime = 795;//765//720;//760;////默认吸烟时间为10S，达到时关闭输出，蓝灯闪3次(单位10ms)
     00B9 211B                      1-  761     	MOVIA	0x1b
                                    1-  762     	BANKSEL	_LedShowKeepTime
     00BA rrrr                      3-  109 m1      .banksel ram_address
     00BB 00rr                      1-  763     	MOVAR	_LedShowKeepTime
     00BC 2103                      1-  764     	MOVIA	0x03
     00BD 00rr                      1-  765     	MOVAR	(_LedShowKeepTime + 1)
                                    1-  766     	.line	1123, "detect.c"; 	SmokingKeepTime = 245;//单位1ms 吸烟时长，主要是为了处理在吸烟前0.3秒是否需要全功率输出的问题
     00BE 21F5                      1-  767     	MOVIA	0xf5
                                    1-  768     	BANKSEL	_SmokingKeepTime
     00BF rrrr                      3-  109 m1      .banksel ram_address
     00C0 00rr                      1-  769     	MOVAR	_SmokingKeepTime
     00C1 02rr                      1-  770     	CLRR	(_SmokingKeepTime + 1)
                                    1-  771     	.line	1124, "detect.c"; 	BaseBatSetPWMValue();
                                    1-  772     	MCALL	_BaseBatSetPWMValue
     00C2 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  773     	.line	1126, "detect.c"; 	SetLedBreathingParameters2(COLOR_GREEN);//开始白灯呼吸效果
     00C3 2102                      1-  774     	MOVIA	0x02
                                    1-  775     	MCALL	_SetLedBreathingParameters2
     00C4 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  776     	.line	1127, "detect.c"; 	LedOff();	
                                    1-  777     	MCALL	_LedOff
     00C5 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  778     	.line	1128, "detect.c"; 	PwmCycleCount = 0;
                                    1-  779     	BANKSEL	_PwmCycleCount
     00C6 rrrr                      3-  109 m1      .banksel ram_address
     00C7 02rr                      1-  780     	CLRR	_PwmCycleCount
                                    1-  781     	.line	1129, "detect.c"; 	if(f_charging||(C_IO_CHRG == 0)||C_IO_USB_DEC)
                                    1-  782     	BANKSEL	_sys_flag_0
     00C8 rrrr                      3-  109 m1      .banksel ram_address
     00C9 0Frr                      1-  783     	BTRSC	_sys_flag_0,6
                                    1-  784     	MGOTO	_02329_DS_
     00CA 3rrr                      3-   62 m1      LGOTO rom_address
     00CB 09rr                      1-  785     	BTRSS	_PORTAbits,2
                                    1-  786     	MGOTO	_02329_DS_
     00CC 3rrr                      3-   62 m1      LGOTO rom_address
     00CD 0Arr                      1-  787     	BTRSS	_PORTAbits,4
                                    1-  788     	MGOTO	_02330_DS_
     00CE 3rrr                      3-   62 m1      LGOTO rom_address
     00CF                           1-  789     _02329_DS_:
                                    1-  790     	.line	1131, "detect.c"; 	b_pause_chrg = 1;
                                    1-  791     	BANKSEL	_sys_flag_2
     00CF rrrr                      3-  109 m1      .banksel ram_address
     00D0 1Brr                      1-  792     	BSR	_sys_flag_2,7
                                    1-  793     	.line	1132, "detect.c"; 	EN_PAUSE_CHRG;//充电状态下吸烟时临时关闭充电电流
     00D1 1Arr                      1-  794     	BSR	_PORTAbits,5
     00D2                           1-  795     _02330_DS_:
                                    1-  796     	.line	1135, "detect.c"; 	SmokeState = STATE_SMOKING;
     00D2 2105                      1-  797     	MOVIA	0x05
                                    1-  798     	BANKSEL	_SmokeState
     00D3 rrrr                      3-  109 m1      .banksel ram_address
     00D4 00rr                      1-  799     	MOVAR	_SmokeState
                                    1-  800     ;;unsigned compare: left < lit(0x7CC=1996), size=2
                                    1-  801     	.line	1137, "detect.c"; 	if(gAdcDataValueBak >= BAT_VOL3P90_ADC_VALUE)
     00D5 21CC                      1-  802     	MOVIA	0xcc
                                    1-  803     	BANKSEL	_gAdcDataValueBak
     00D6 rrrr                      3-  109 m1      .banksel ram_address
     00D7 04rr                      1-  804     	SUBAR	_gAdcDataValueBak,W
     00D8 2107                      1-  805     	MOVIA	0x07
     00D9 35rr                      1-  806     	SBCAR	(_gAdcDataValueBak + 1),W
     00DA 0803                      1-  807     	BTRSS	STATUS,0
                                    1-  808     	MGOTO	_02334_DS_
     00DB 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  809     	.line	1139, "detect.c"; 	percent_nun = TargetMotorDuty;
                                    1-  810     	BANKSEL	_TargetMotorDuty
     00DC rrrr                      3-  109 m1      .banksel ram_address
     00DD 01rr                      1-  811     	MOVR	_TargetMotorDuty,W
                                    1-  812     	BANKSEL	_percent_nun
     00DE rrrr                      3-  109 m1      .banksel ram_address
     00DF 00rr                      1-  813     	MOVAR	_percent_nun
                                    1-  814     	MGOTO	_02335_DS_
     00E0 3rrr                      3-   62 m1      LGOTO rom_address
     00E1                           1-  815     _02334_DS_:
                                    1-  816     	.line	1143, "detect.c"; 	percent_nun = DUTY_ALL;
     00E1 2146                      1-  817     	MOVIA	0x46
                                    1-  818     	BANKSEL	_percent_nun
     00E2 rrrr                      3-  109 m1      .banksel ram_address
     00E3 00rr                      1-  819     	MOVAR	_percent_nun
     00E4                           1-  820     _02335_DS_:
                                    1-  821     	.line	1145, "detect.c"; 	temp_flag = 0;
                                    1-  822     	BANKSEL	_sys_flag_2
     00E4 rrrr                      3-  109 m1      .banksel ram_address
     00E5 1Crr                      1-  823     	BCR	_sys_flag_2,0
                                    1-  824     	.line	1146, "detect.c"; 	break;
                                    1-  825     	MGOTO	_02343_DS_
     00E6 3rrr                      3-   62 m1      LGOTO rom_address
     00E7                           1-  826     _02336_DS_:
                                    1-  827     	.line	1149, "detect.c"; 	if(b_smoking)
                                    1-  828     	BANKSEL	_sys_flag_1
     00E7 rrrr                      3-  109 m1      .banksel ram_address
     00E8 08rr                      1-  829     	BTRSS	_sys_flag_1,1
                                    1-  830     	MGOTO	_02343_DS_
     00E9 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  831     	.line	1151, "detect.c"; 	if((SmokingKeepTime == 0)&&!temp_flag)
                                    1-  832     	BANKSEL	_SmokingKeepTime
     00EA rrrr                      3-  109 m1      .banksel ram_address
     00EB 01rr                      1-  833     	MOVR	(_SmokingKeepTime + 1),W
     00EC 11rr                      1-  834     	IORAR	_SmokingKeepTime,W
     00ED 0903                      1-  835     	BTRSS	STATUS,2
                                    1-  836     	MGOTO	_02343_DS_
     00EE 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  837     	BANKSEL	_sys_flag_2
     00EF rrrr                      3-  109 m1      .banksel ram_address
     00F0 0Crr                      1-  838     	BTRSC	_sys_flag_2,0
                                    1-  839     	MGOTO	_02343_DS_
     00F1 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  840     	.line	1154, "detect.c"; 	temp_flag = 1;
     00F2 18rr                      1-  841     	BSR	_sys_flag_2,0
                                    1-  842     	.line	1155, "detect.c"; 	BaseBatSetPWMValue();
                                    1-  843     	MCALL	_BaseBatSetPWMValue
     00F3 2rrr                      3-   65 m1      LCALL rom_address
                                    1-  844     	.line	1156, "detect.c"; 	percent_nun = TargetMotorDuty;
                                    1-  845     	BANKSEL	_TargetMotorDuty
     00F4 rrrr                      3-  109 m1      .banksel ram_address
     00F5 01rr                      1-  846     	MOVR	_TargetMotorDuty,W
                                    1-  847     	BANKSEL	_percent_nun
     00F6 rrrr                      3-  109 m1      .banksel ram_address
     00F7 00rr                      1-  848     	MOVAR	_percent_nun
     00F8                           1-  849     _02343_DS_:
                                    1-  850     	.line	1162, "detect.c"; 	}
                                    1-  851     	RETURN	
     00F8 0010                      3-   39 m1      ret
                                    1-  852     ; exit point of _SmokeFun
                                    1-  854     ;***
                                    1-  855     ;  pBlock Stats: dbName = C
                                    1-  856     ;***
                                    1-  857     ;has an exit
                                    1-  858     ;1 compiler assigned register :
                                    1-  859     ;   r0x102B
                                    1-  860     ;; Starting pCode block
                                    1-  861     .segment "code"; module=detect, function=_bat_lvd_check
     0000                           1-  863     _bat_lvd_check:
                                    1-  864     ; 2 exit points
                                    1-  865     	.line	922, "detect.c"; 	if(SmokeState != STATE_SMOKING)
                                    1-  866     	BANKSEL	_SmokeState
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1-  867     	MOVR	_SmokeState,W
     0002 2405                      1-  868     	XORIA	0x05
     0003 0903                      1-  869     	BTRSS	STATUS,2
                                    1-  870     	.line	923, "detect.c"; 	return;
                                    1-  871     	MGOTO	_02269_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  872     	.line	924, "detect.c"; 	if(!f_bat_lvd_check)
                                    1-  873     	BANKSEL	_sys_flag_3
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 0Arr                      1-  874     	BTRSS	_sys_flag_3,5
                                    1-  875     	.line	925, "detect.c"; 	return;
                                    1-  876     	MGOTO	_02269_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1-  877     _02263_DS_:
                                    1-  878     	.line	926, "detect.c"; 	f_bat_lvd_check = 0;	
                                    1-  879     	BANKSEL	_sys_flag_3
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 1Err                      1-  880     	BCR	_sys_flag_3,5
                                    1-  881     	.line	927, "detect.c"; 	if(PCON1&C_LVDOUT)
     000A 001r                      1-  882     	IOSTR	_PCON1
                                    1-  883     	BANKSEL	r0x102B
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 00rr                      1-  884     	MOVAR	r0x102B
     000D 0Brr                      1-  885     	BTRSS	r0x102B,6
                                    1-  886     	MGOTO	_02267_DS_
     000E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  887     	.line	943, "detect.c"; 	battery_low_cnt = 0;
                                    1-  888     	BANKSEL	_battery_low_cnt
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 02rr                      1-  889     	CLRR	_battery_low_cnt
                                    1-  890     	MGOTO	_02269_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
     0012                           1-  891     _02267_DS_:
                                    1-  892     	.line	947, "detect.c"; 	battery_low_cnt++;
                                    1-  893     	BANKSEL	_battery_low_cnt
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 05rr                      1-  894     	INCR	_battery_low_cnt,F
                                    1-  895     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1-  896     ;;unsigned compare: left >= lit(0x33=51), size=1
                                    1-  897     	.line	948, "detect.c"; 	if(battery_low_cnt > 50)//500ms
     0014 2133                      1-  898     	MOVIA	0x33
     0015 04rr                      1-  899     	SUBAR	_battery_low_cnt,W
     0016 0803                      1-  900     	BTRSS	STATUS,0
                                    1-  901     	MGOTO	_02269_DS_
     0017 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  902     	.line	950, "detect.c"; 	battery_low_cnt = 0;
     0018 02rr                      1-  903     	CLRR	_battery_low_cnt
                                    1-  904     	.line	956, "detect.c"; 	I0_PWM2 = MT_OF;
     0019 19rr                      1-  905     	BSR	_PORTBbits,2
                                    1-  906     	.line	957, "detect.c"; 	percent_nun = 0;
                                    1-  907     	BANKSEL	_percent_nun
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 02rr                      1-  908     	CLRR	_percent_nun
                                    1-  909     	.line	958, "detect.c"; 	msg = MSG_LVD;
     001C 2108                      1-  910     	MOVIA	0x08
                                    1-  911     	BANKSEL	_msg
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1-  912     	MOVAR	_msg
     001F                           1-  913     _02269_DS_:
                                    1-  914     	.line	962, "detect.c"; 	}
                                    1-  915     	RETURN	
     001F 0010                      3-   39 m1      ret
                                    1-  916     ; exit point of _bat_lvd_check
                                    1-  918     ;***
                                    1-  919     ;  pBlock Stats: dbName = C
                                    1-  920     ;***
                                    1-  921     ;has an exit
                                    1-  922     ;; Starting pCode block
                                    1-  923     .segment "code"; module=detect, function=_charge_check_by_IO
     0000                           1-  925     _charge_check_by_IO:
                                    1-  926     ; 2 exit points
                                    1-  927     	.line	839, "detect.c"; 	if((nowLedMode == 1)||b_pause_chrg)//吸烟时不检测USB插拔和充满检测
                                    1-  928     	BANKSEL	_nowLedMode
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1-  929     	MOVR	_nowLedMode,W
     0002 2401                      1-  930     	XORIA	0x01
     0003 0D03                      1-  931     	BTRSC	STATUS,2
                                    1-  932     	MGOTO	_02207_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  933     	BANKSEL	_sys_flag_2
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 0Frr                      1-  934     	BTRSC	_sys_flag_2,7
     0007                           1-  935     _02207_DS_:
                                    1-  936     	.line	840, "detect.c"; 	return;
                                    1-  937     	MGOTO	_02225_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
     0008                           1-  938     _02208_DS_:
                                    1-  939     	.line	841, "detect.c"; 	if(f_charge_check)//10ms
                                    1-  940     	BANKSEL	_sys_flag_0
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 09rr                      1-  941     	BTRSS	_sys_flag_0,3
                                    1-  942     	MGOTO	_02225_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  943     	.line	843, "detect.c"; 	f_charge_check = 0;
     000B 1Drr                      1-  944     	BCR	_sys_flag_0,3
                                    1-  945     	.line	844, "detect.c"; 	if(C_IO_USB_DEC)//USB检测
     000C 0Arr                      1-  946     	BTRSS	_PORTAbits,4
                                    1-  947     	MGOTO	_02221_DS_
     000D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  948     	.line	846, "detect.c"; 	if(!f_charging)
     000E 0Frr                      1-  949     	BTRSC	_sys_flag_0,6
                                    1-  950     	MGOTO	_02225_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  951     ;;unsigned compare: left < lit(0x14=20), size=1
                                    1-  952     	.line	848, "detect.c"; 	if(Chrg_On_time_count < 20)
     0010 2114                      1-  953     	MOVIA	0x14
                                    1-  954     	BANKSEL	_Chrg_On_time_count
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 04rr                      1-  955     	SUBAR	_Chrg_On_time_count,W
     0013 0C03                      1-  956     	BTRSC	STATUS,0
                                    1-  957     	MGOTO	_02211_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  958     	.line	850, "detect.c"; 	Chrg_On_time_count++;
     0015 05rr                      1-  959     	INCR	_Chrg_On_time_count,F
                                    1-  960     	MGOTO	_02225_DS_
     0016 3rrr                      3-   62 m1      LGOTO rom_address
     0017                           1-  961     _02211_DS_:
                                    1-  962     	.line	855, "detect.c"; 	ChrgFullTimeCount = 0;
                                    1-  963     	BANKSEL	_ChrgFullTimeCount
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 02rr                      1-  964     	CLRR	_ChrgFullTimeCount
     0019 02rr                      1-  965     	CLRR	(_ChrgFullTimeCount + 1)
                                    1-  966     	.line	856, "detect.c"; 	msg = MSG_CHRG;//插入USB充电
     001A 2103                      1-  967     	MOVIA	0x03
                                    1-  968     	BANKSEL	_msg
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 00rr                      1-  969     	MOVAR	_msg
                                    1-  970     	MGOTO	_02225_DS_
     001D 3rrr                      3-   62 m1      LGOTO rom_address
     001E                           1-  971     _02221_DS_:
                                    1-  972     	.line	863, "detect.c"; 	if(f_charging)
                                    1-  973     	BANKSEL	_sys_flag_0
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 0Brr                      1-  974     	BTRSS	_sys_flag_0,6
                                    1-  975     	MGOTO	_02225_DS_
     0020 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  976     	.line	865, "detect.c"; 	if(Chrg_On_time_count > 0)
                                    1-  977     	BANKSEL	_Chrg_On_time_count
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1-  978     	MOVR	_Chrg_On_time_count,W
     0023 0D03                      1-  979     	BTRSC	STATUS,2
                                    1-  980     	MGOTO	_02216_DS_
     0024 3rrr                      3-   62 m1      LGOTO rom_address
                                    1-  981     	.line	867, "detect.c"; 	Chrg_On_time_count--;
     0025 06rr                      1-  982     	DECR	_Chrg_On_time_count,F
                                    1-  983     	MGOTO	_02225_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
     0027                           1-  984     _02216_DS_:
                                    1-  985     	.line	872, "detect.c"; 	msg = MSG_CHRG_OFF; //拔出USB
     0027 2104                      1-  986     	MOVIA	0x04
                                    1-  987     	BANKSEL	_msg
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 00rr                      1-  988     	MOVAR	_msg
     002A                           1-  989     _02225_DS_:
                                    1-  990     	.line	918, "detect.c"; 	}
                                    1-  991     	RETURN	
     002A 0010                      3-   39 m1      ret
                                    1-  992     ; exit point of _charge_check_by_IO
                                    1-  994     ;***
                                    1-  995     ;  pBlock Stats: dbName = C
                                    1-  996     ;***
                                    1-  997     ;has an exit
                                    1-  998     ;2 compiler assigned registers:
                                    1-  999     ;   r0x102C
                                    1- 1000     ;   r0x102D
                                    1- 1001     ;; Starting pCode block
                                    1- 1002     .segment "code"; module=detect, function=_HeaterExistdetect
     0000                           1- 1004     _HeaterExistdetect:
                                    1- 1005     ; 2 exit points
                                    1- 1006     	.line	787, "detect.c"; 	if((nowLedMode == 1)||b_smoke_init||b_smoking||(IN_MIC == 1)||b_heater_detect_mask)//在加热时不检测发热丝的插拔
                                    1- 1007     	BANKSEL	_nowLedMode
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 01rr                      1- 1008     	MOVR	_nowLedMode,W
     0002 2401                      1- 1009     	XORIA	0x01
     0003 0D03                      1- 1010     	BTRSC	STATUS,2
                                    1- 1011     	MGOTO	_02126_DS_
     0004 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1012     	BANKSEL	_sys_flag_0
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 0Crr                      1- 1013     	BTRSC	_sys_flag_0,1
                                    1- 1014     	MGOTO	_02126_DS_
     0007 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1015     	BANKSEL	_sys_flag_1
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 0Crr                      1- 1016     	BTRSC	_sys_flag_1,1
                                    1- 1017     	MGOTO	_02126_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1018     	BANKSEL	r0x102C
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 02rr                      1- 1019     	CLRR	r0x102C
     000D 0Crr                      1- 1020     	BTRSC	_PORTBbits,0
     000E 05rr                      1- 1021     	INCR	r0x102C,F
     000F 01rr                      1- 1022     	MOVR	r0x102C,W
                                    1- 1023     ;;1	MOVAR	r0x102D
     0010 2401                      1- 1024     	XORIA	0x01
     0011 0D03                      1- 1025     	BTRSC	STATUS,2
                                    1- 1026     	MGOTO	_02126_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1027     	BANKSEL	_sys_flag_2
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 0Err                      1- 1028     	BTRSC	_sys_flag_2,5
     0015                           1- 1029     _02126_DS_:
                                    1- 1030     	.line	788, "detect.c"; 	return;
                                    1- 1031     	MGOTO	_02151_DS_
     0015 3rrr                      3-   62 m1      LGOTO rom_address
     0016                           1- 1032     _02127_DS_:
                                    1- 1033     	.line	789, "detect.c"; 	C_ADC_OFF2;
     0016 1Frr                      1- 1034     	BCR	_ADMD,7
     0017 1Frr                      1- 1035     	BCR	_ADMDbits,6
                                    1- 1036     	.line	790, "detect.c"; 	PACON = 0;//C_PA0_AIN0;
     0018 02rr                      1- 1037     	CLRR	_PACON
                                    1- 1038     	.line	791, "detect.c"; 	if(f_heat_check)//10ms
                                    1- 1039     	BANKSEL	_sys_flag_3
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 08rr                      1- 1040     	BTRSS	_sys_flag_3,1
                                    1- 1041     	MGOTO	_02144_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1042     	.line	793, "detect.c"; 	f_heat_check = 0;
     001C 1Crr                      1- 1043     	BCR	_sys_flag_3,1
                                    1- 1044     	.line	794, "detect.c"; 	if(C_IO_HEATER_CHECK_DEC == 0)//发热丝是否存在检测
     001D 0Crr                      1- 1045     	BTRSC	_PORTAbits,0
                                    1- 1046     	MGOTO	_02141_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1047     	.line	796, "detect.c"; 	Heat_On_time_count = 0;
                                    1- 1048     	BANKSEL	_Heat_On_time_count
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 02rr                      1- 1049     	CLRR	_Heat_On_time_count
                                    1- 1050     	.line	797, "detect.c"; 	if(!b_heater_exist_flag)
                                    1- 1051     	BANKSEL	_sys_flag_2
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 0Crr                      1- 1052     	BTRSC	_sys_flag_2,1
                                    1- 1053     	MGOTO	_02144_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1054     	.line	799, "detect.c"; 	Heat_Off_time_count++;
                                    1- 1055     	BANKSEL	_Heat_Off_time_count
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 05rr                      1- 1056     	INCR	_Heat_Off_time_count,F
                                    1- 1057     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1058     ;;unsigned compare: left >= lit(0x6=6), size=1
                                    1- 1059     	.line	800, "detect.c"; 	if(Heat_Off_time_count > 5)//70 Chrg_Off_time_count*10ms
     0026 2106                      1- 1060     	MOVIA	0x06
     0027 04rr                      1- 1061     	SUBAR	_Heat_Off_time_count,W
     0028 0803                      1- 1062     	BTRSS	STATUS,0
                                    1- 1063     	MGOTO	_02144_DS_
     0029 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1064     	.line	802, "detect.c"; 	Heat_Off_time_count = 0;
     002A 02rr                      1- 1065     	CLRR	_Heat_Off_time_count
                                    1- 1066     	.line	803, "detect.c"; 	b_heater_exist_flag = 1;
                                    1- 1067     	BANKSEL	_sys_flag_2
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 18rr                      1- 1068     	BSR	_sys_flag_2,1
                                    1- 1069     	.line	804, "detect.c"; 	msg = MSG_INSERT_HEATER;//插入发热丝
     002D 2105                      1- 1070     	MOVIA	0x05
                                    1- 1071     	BANKSEL	_msg
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1072     	MOVAR	_msg
                                    1- 1073     	MGOTO	_02144_DS_
     0030 3rrr                      3-   62 m1      LGOTO rom_address
     0031                           1- 1074     _02141_DS_:
                                    1- 1075     	.line	811, "detect.c"; 	Heat_Off_time_count = 0;
                                    1- 1076     	BANKSEL	_Heat_Off_time_count
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 02rr                      1- 1077     	CLRR	_Heat_Off_time_count
                                    1- 1078     	.line	812, "detect.c"; 	if(b_heater_exist_flag)
                                    1- 1079     	BANKSEL	_sys_flag_2
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 08rr                      1- 1080     	BTRSS	_sys_flag_2,1
                                    1- 1081     	MGOTO	_02144_DS_
     0035 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1082     	.line	815, "detect.c"; 	Heat_On_time_count++;
                                    1- 1083     	BANKSEL	_Heat_On_time_count
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 05rr                      1- 1084     	INCR	_Heat_On_time_count,F
                                    1- 1085     ;;swapping arguments (AOP_TYPEs 1/3)
                                    1- 1086     ;;unsigned compare: left >= lit(0x6=6), size=1
                                    1- 1087     	.line	816, "detect.c"; 	if(Heat_On_time_count > 5)//70 Chrg_On_time_count*10ms
     0038 2106                      1- 1088     	MOVIA	0x06
     0039 04rr                      1- 1089     	SUBAR	_Heat_On_time_count,W
     003A 0803                      1- 1090     	BTRSS	STATUS,0
                                    1- 1091     	MGOTO	_02144_DS_
     003B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1092     	.line	818, "detect.c"; 	Heat_On_time_count = 0;
     003C 02rr                      1- 1093     	CLRR	_Heat_On_time_count
                                    1- 1094     	.line	819, "detect.c"; 	b_heater_exist_flag = 0;
                                    1- 1095     	BANKSEL	_sys_flag_2
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 1Crr                      1- 1096     	BCR	_sys_flag_2,1
                                    1- 1097     	.line	820, "detect.c"; 	msg = MSG_PULLOUT_HEATER; //拔出发热丝
     003F 2106                      1- 1098     	MOVIA	0x06
                                    1- 1099     	BANKSEL	_msg
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 00rr                      1- 1100     	MOVAR	_msg
     0042                           1- 1101     _02144_DS_:
                                    1- 1102     	.line	825, "detect.c"; 	if((b_heater_exist_flag&&C_IO_HEATER_CHECK_DEC)||(!b_heater_exist_flag&&!C_IO_HEATER_CHECK_DEC))//主要是在检测过程中不能中途进入睡眠中
                                    1- 1103     	BANKSEL	_sys_flag_2
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 08rr                      1- 1104     	BTRSS	_sys_flag_2,1
                                    1- 1105     	MGOTO	_02150_DS_
     0044 3rrr                      3-   62 m1      LGOTO rom_address
     0045 0Crr                      1- 1106     	BTRSC	_PORTAbits,0
                                    1- 1107     	MGOTO	_02145_DS_
     0046 3rrr                      3-   62 m1      LGOTO rom_address
     0047                           1- 1108     _02150_DS_:
                                    1- 1109     	BANKSEL	_sys_flag_2
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 0Crr                      1- 1110     	BTRSC	_sys_flag_2,1
                                    1- 1111     	MGOTO	_02146_DS_
     0049 3rrr                      3-   62 m1      LGOTO rom_address
     004A 0Crr                      1- 1112     	BTRSC	_PORTAbits,0
                                    1- 1113     	MGOTO	_02146_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
     004C                           1- 1114     _02145_DS_:
                                    1- 1115     	.line	827, "detect.c"; 	b_heater_exist_check = 1;
                                    1- 1116     	BANKSEL	_sys_flag_3
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 18rr                      1- 1117     	BSR	_sys_flag_3,0
                                    1- 1118     	MGOTO	_02147_DS_
     004E 3rrr                      3-   62 m1      LGOTO rom_address
     004F                           1- 1119     _02146_DS_:
                                    1- 1120     	.line	831, "detect.c"; 	b_heater_exist_check = 0;
                                    1- 1121     	BANKSEL	_sys_flag_3
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 1Crr                      1- 1122     	BCR	_sys_flag_3,0
     0051                           1- 1123     _02147_DS_:
                                    1- 1124     	.line	833, "detect.c"; 	C_ADC_ON2;
     0051 1Brr                      1- 1125     	BSR	_ADMD,7
     0052 1Frr                      1- 1126     	BCR	_ADMDbits,6
                                    1- 1127     	.line	834, "detect.c"; 	PACON = C_PA0_AIN0;
     0053 2101                      1- 1128     	MOVIA	0x01
     0054 00rr                      1- 1129     	MOVAR	_PACON
     0055                           1- 1130     _02151_DS_:
                                    1- 1131     	.line	835, "detect.c"; 	}
                                    1- 1132     	RETURN	
     0055 0010                      3-   39 m1      ret
                                    1- 1133     ; exit point of _HeaterExistdetect
                                    1- 1135     ;***
                                    1- 1136     ;  pBlock Stats: dbName = C
                                    1- 1137     ;***
                                    1- 1138     ;has an exit
                                    1- 1139     ;; Starting pCode block
                                    1- 1140     .segment "code"; module=detect, function=_BaseBatSetPWMValue
     0000                           1- 1142     _BaseBatSetPWMValue:
                                    1- 1143     ; 2 exit points
                                    1- 1144     ;;unsigned compare: left < lit(0x85C=2140), size=2
                                    1- 1145     	.line	692, "detect.c"; 	if(gAdcDataValueBak >= BAT_VOL4P18_ADC_VALUE)//BAT_VOL4P20_ADC_VALUE
     0000 215C                      1- 1146     	MOVIA	0x5c
                                    1- 1147     	BANKSEL	_gAdcDataValueBak
     0001 rrrr                      3-  109 m1      .banksel ram_address
     0002 04rr                      1- 1148     	SUBAR	_gAdcDataValueBak,W
     0003 2108                      1- 1149     	MOVIA	0x08
     0004 35rr                      1- 1150     	SBCAR	(_gAdcDataValueBak + 1),W
     0005 0803                      1- 1151     	BTRSS	STATUS,0
                                    1- 1152     	MGOTO	_02119_DS_
     0006 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1153     	.line	694, "detect.c"; 	if(SmokingKeepTime)//3.9v/4.2v = 0.928
                                    1- 1154     	BANKSEL	_SmokingKeepTime
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 01rr                      1- 1155     	MOVR	(_SmokingKeepTime + 1),W
     0009 11rr                      1- 1156     	IORAR	_SmokingKeepTime,W
     000A 0D03                      1- 1157     	BTRSC	STATUS,2
                                    1- 1158     	MGOTO	_02098_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1159     	.line	695, "detect.c"; 	TargetMotorDuty = 66;//
     000C 2142                      1- 1160     	MOVIA	0x42
                                    1- 1161     	BANKSEL	_TargetMotorDuty
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 00rr                      1- 1162     	MOVAR	_TargetMotorDuty
                                    1- 1163     	MGOTO	_02121_DS_
     000F 3rrr                      3-   62 m1      LGOTO rom_address
     0010                           1- 1164     _02098_DS_:
                                    1- 1165     	.line	697, "detect.c"; 	TargetMotorDuty = 57;//57;//42;//43;//
     0010 2139                      1- 1166     	MOVIA	0x39
                                    1- 1167     	BANKSEL	_TargetMotorDuty
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 00rr                      1- 1168     	MOVAR	_TargetMotorDuty
                                    1- 1169     	.line	697, "detect.c"; 	}
                                    1- 1170     	MGOTO	_02121_DS_
     0013 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1171     ;;unsigned compare: left < lit(0x829=2089), size=2
     0014                           1- 1172     _02119_DS_:
                                    1- 1173     	.line	699, "detect.c"; 	else if(gAdcDataValueBak >= BAT_VOL4P08_ADC_VALUE)
     0014 2129                      1- 1174     	MOVIA	0x29
                                    1- 1175     	BANKSEL	_gAdcDataValueBak
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 04rr                      1- 1176     	SUBAR	_gAdcDataValueBak,W
     0017 2108                      1- 1177     	MOVIA	0x08
     0018 35rr                      1- 1178     	SBCAR	(_gAdcDataValueBak + 1),W
     0019 0803                      1- 1179     	BTRSS	STATUS,0
                                    1- 1180     	MGOTO	_02116_DS_
     001A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1181     	.line	701, "detect.c"; 	if(SmokingKeepTime)//3.9v/4.2v = 0.928
                                    1- 1182     	BANKSEL	_SmokingKeepTime
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 01rr                      1- 1183     	MOVR	(_SmokingKeepTime + 1),W
     001D 11rr                      1- 1184     	IORAR	_SmokingKeepTime,W
     001E 0D03                      1- 1185     	BTRSC	STATUS,2
                                    1- 1186     	MGOTO	_02101_DS_
     001F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1187     	.line	702, "detect.c"; 	TargetMotorDuty = 66;//
     0020 2142                      1- 1188     	MOVIA	0x42
                                    1- 1189     	BANKSEL	_TargetMotorDuty
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 00rr                      1- 1190     	MOVAR	_TargetMotorDuty
                                    1- 1191     	MGOTO	_02121_DS_
     0023 3rrr                      3-   62 m1      LGOTO rom_address
     0024                           1- 1192     _02101_DS_:
                                    1- 1193     	.line	704, "detect.c"; 	TargetMotorDuty = 59;//59;//57;//42;//43;//
     0024 213B                      1- 1194     	MOVIA	0x3b
                                    1- 1195     	BANKSEL	_TargetMotorDuty
     0025 rrrr                      3-  109 m1      .banksel ram_address
     0026 00rr                      1- 1196     	MOVAR	_TargetMotorDuty
                                    1- 1197     	.line	704, "detect.c"; 	}
                                    1- 1198     	MGOTO	_02121_DS_
     0027 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1199     ;;unsigned compare: left < lit(0x7F5=2037), size=2
     0028                           1- 1200     _02116_DS_:
                                    1- 1201     	.line	706, "detect.c"; 	else if(gAdcDataValueBak >= BAT_VOL3P98_ADC_VALUE)
     0028 21F5                      1- 1202     	MOVIA	0xf5
                                    1- 1203     	BANKSEL	_gAdcDataValueBak
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 04rr                      1- 1204     	SUBAR	_gAdcDataValueBak,W
     002B 2107                      1- 1205     	MOVIA	0x07
     002C 35rr                      1- 1206     	SBCAR	(_gAdcDataValueBak + 1),W
     002D 0803                      1- 1207     	BTRSS	STATUS,0
                                    1- 1208     	MGOTO	_02113_DS_
     002E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1209     	.line	708, "detect.c"; 	if(SmokingKeepTime)//3.9v/4.2v = 0.928
                                    1- 1210     	BANKSEL	_SmokingKeepTime
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 01rr                      1- 1211     	MOVR	(_SmokingKeepTime + 1),W
     0031 11rr                      1- 1212     	IORAR	_SmokingKeepTime,W
     0032 0D03                      1- 1213     	BTRSC	STATUS,2
                                    1- 1214     	MGOTO	_02104_DS_
     0033 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1215     	.line	709, "detect.c"; 	TargetMotorDuty = 69;//
     0034 2145                      1- 1216     	MOVIA	0x45
                                    1- 1217     	BANKSEL	_TargetMotorDuty
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 1218     	MOVAR	_TargetMotorDuty
                                    1- 1219     	MGOTO	_02121_DS_
     0037 3rrr                      3-   62 m1      LGOTO rom_address
     0038                           1- 1220     _02104_DS_:
                                    1- 1221     	.line	711, "detect.c"; 	TargetMotorDuty = 63;//61;//62;//43;//45;//
     0038 213F                      1- 1222     	MOVIA	0x3f
                                    1- 1223     	BANKSEL	_TargetMotorDuty
     0039 rrrr                      3-  109 m1      .banksel ram_address
     003A 00rr                      1- 1224     	MOVAR	_TargetMotorDuty
                                    1- 1225     	.line	711, "detect.c"; 	}
                                    1- 1226     	MGOTO	_02121_DS_
     003B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1227     ;;unsigned compare: left < lit(0x7C2=1986), size=2
     003C                           1- 1228     _02113_DS_:
                                    1- 1229     	.line	713, "detect.c"; 	else if(gAdcDataValueBak >= BAT_VOL3P88_ADC_VALUE)
     003C 21C2                      1- 1230     	MOVIA	0xc2
                                    1- 1231     	BANKSEL	_gAdcDataValueBak
     003D rrrr                      3-  109 m1      .banksel ram_address
     003E 04rr                      1- 1232     	SUBAR	_gAdcDataValueBak,W
     003F 2107                      1- 1233     	MOVIA	0x07
     0040 35rr                      1- 1234     	SBCAR	(_gAdcDataValueBak + 1),W
     0041 0803                      1- 1235     	BTRSS	STATUS,0
                                    1- 1236     	MGOTO	_02110_DS_
     0042 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1237     	.line	715, "detect.c"; 	if(SmokingKeepTime)//3.9v/4.2v = 0.928
                                    1- 1238     	BANKSEL	_SmokingKeepTime
     0043 rrrr                      3-  109 m1      .banksel ram_address
     0044 01rr                      1- 1239     	MOVR	(_SmokingKeepTime + 1),W
     0045 11rr                      1- 1240     	IORAR	_SmokingKeepTime,W
     0046 0D03                      1- 1241     	BTRSC	STATUS,2
                                    1- 1242     	MGOTO	_02107_DS_
     0047 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1243     	.line	716, "detect.c"; 	TargetMotorDuty = DUTY_ALL;//
     0048 2146                      1- 1244     	MOVIA	0x46
                                    1- 1245     	BANKSEL	_TargetMotorDuty
     0049 rrrr                      3-  109 m1      .banksel ram_address
     004A 00rr                      1- 1246     	MOVAR	_TargetMotorDuty
                                    1- 1247     	MGOTO	_02121_DS_
     004B 3rrr                      3-   62 m1      LGOTO rom_address
     004C                           1- 1248     _02107_DS_:
                                    1- 1249     	.line	718, "detect.c"; 	TargetMotorDuty = 68;//49;//48;//46;//
     004C 2144                      1- 1250     	MOVIA	0x44
                                    1- 1251     	BANKSEL	_TargetMotorDuty
     004D rrrr                      3-  109 m1      .banksel ram_address
     004E 00rr                      1- 1252     	MOVAR	_TargetMotorDuty
                                    1- 1253     	.line	718, "detect.c"; 	}
                                    1- 1254     	MGOTO	_02121_DS_
     004F 3rrr                      3-   62 m1      LGOTO rom_address
     0050                           1- 1255     _02110_DS_:
                                    1- 1256     	.line	745, "detect.c"; 	TargetMotorDuty = DUTY_ALL;//
     0050 2146                      1- 1257     	MOVIA	0x46
                                    1- 1258     	BANKSEL	_TargetMotorDuty
     0051 rrrr                      3-  109 m1      .banksel ram_address
     0052 00rr                      1- 1259     	MOVAR	_TargetMotorDuty
     0053                           1- 1260     _02121_DS_:
                                    1- 1261     	.line	766, "detect.c"; 	}
                                    1- 1262     	RETURN	
     0053 0010                      3-   39 m1      ret
                                    1- 1263     ; exit point of _BaseBatSetPWMValue
                                    1- 1265     ;***
                                    1- 1266     ;  pBlock Stats: dbName = C
                                    1- 1267     ;***
                                    1- 1268     ;has an exit
                                    1- 1269     ;functions called:
                                    1- 1270     ;   _ADC_Convert_Pre
                                    1- 1271     ;   _F_wait_eoc
                                    1- 1272     ;   _ADC_Convert_Pre
                                    1- 1273     ;   _F_wait_eoc
                                    1- 1274     ;5 compiler assigned registers:
                                    1- 1275     ;   r0x102F
                                    1- 1276     ;   r0x1030
                                    1- 1277     ;   r0x1031
                                    1- 1278     ;   r0x1032
                                    1- 1279     ;   r0x1033
                                    1- 1280     ;; Starting pCode block
                                    1- 1281     .segment "code"; module=detect, function=_Get_Bat_ChrgBat_ADCValue
                                    1- 1283     ;local variable name mapping:
     0000                           1- 1285     _Get_Bat_ChrgBat_ADCValue:
                                    1- 1286     ; 2 exit points
                                    1- 1287     	.line	435, "detect.c"; 	if(!f_charging)
                                    1- 1288     	BANKSEL	_sys_flag_0
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 0Frr                      1- 1289     	BTRSC	_sys_flag_0,6
                                    1- 1290     	MGOTO	_02074_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1291     	.line	437, "detect.c"; 	ChrgFullTimeCount = 0;
                                    1- 1292     	BANKSEL	_ChrgFullTimeCount
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 02rr                      1- 1293     	CLRR	_ChrgFullTimeCount
     0005 02rr                      1- 1294     	CLRR	(_ChrgFullTimeCount + 1)
                                    1- 1295     	.line	438, "detect.c"; 	return;
                                    1- 1296     	MGOTO	_02092_DS_
     0006 3rrr                      3-   62 m1      LGOTO rom_address
     0007                           1- 1297     _02074_DS_:
                                    1- 1298     	.line	440, "detect.c"; 	if(!f_10ms_TimeOut)
                                    1- 1299     	BANKSEL	_sys_flag_3
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 0Arr                      1- 1300     	BTRSS	_sys_flag_3,4
                                    1- 1301     	.line	441, "detect.c"; 	return;
                                    1- 1302     	MGOTO	_02092_DS_
     0009 3rrr                      3-   62 m1      LGOTO rom_address
     000A                           1- 1303     _02076_DS_:
                                    1- 1304     	.line	442, "detect.c"; 	f_10ms_TimeOut = 0;
                                    1- 1305     	BANKSEL	_sys_flag_3
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 1Err                      1- 1306     	BCR	_sys_flag_3,4
                                    1- 1307     	.line	446, "detect.c"; 	ADMD &= 0xf0;
     000C 21F0                      1- 1308     	MOVIA	0xf0
     000D 10rr                      1- 1309     	ANDAR	_ADMD,F
                                    1- 1310     	.line	447, "detect.c"; 	ADMD |= C_Quarter_VDD;
     000E 210B                      1- 1311     	MOVIA	0x0b
     000F 11rr                      1- 1312     	IORAR	_ADMD,F
                                    1- 1313     	.line	450, "detect.c"; 	ADC_Convert_Pre();
                                    1- 1314     	MCALL	_ADC_Convert_Pre
     0010 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1315     	.line	455, "detect.c"; 	gAdcDataValue = 0;
                                    1- 1316     	BANKSEL	_gAdcDataValue
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 02rr                      1- 1317     	CLRR	_gAdcDataValue
     0013 02rr                      1- 1318     	CLRR	(_gAdcDataValue + 1)
                                    1- 1319     	.line	456, "detect.c"; 	for(i = 0; i < 5; i++)
                                    1- 1320     	BANKSEL	r0x102F
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 02rr                      1- 1321     	CLRR	r0x102F
     0016                           1- 1322     _02090_DS_:
                                    1- 1323     	.line	458, "detect.c"; 	ADMDbits.START = 1;
     0016 1Brr                      1- 1324     	BSR	_ADMDbits,6
                                    1- 1325     	.line	459, "detect.c"; 	F_wait_eoc();
                                    1- 1326     	MCALL	_F_wait_eoc
     0017 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1327     	.line	462, "detect.c"; 	if(i > 0)
                                    1- 1328     	BANKSEL	r0x102F
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 01rr                      1- 1329     	MOVR	r0x102F,W
     001A 0D03                      1- 1330     	BTRSC	STATUS,2
                                    1- 1331     	MGOTO	_02091_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1332     	.line	464, "detect.c"; 	TmpAdcDataValue = ADD;
     001C 01rr                      1- 1333     	MOVR	_ADD,W
                                    1- 1334     	BANKSEL	_TmpAdcDataValue
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 00rr                      1- 1335     	MOVAR	_TmpAdcDataValue
     001F 02rr                      1- 1336     	CLRR	(_TmpAdcDataValue + 1)
                                    1- 1337     	.line	465, "detect.c"; 	TmpAdcDataValue <<= 4;
     0020 15rr                      1- 1338     	SWAPR	(_TmpAdcDataValue + 1),W
     0021 22F0                      1- 1339     	ANDIA	0xf0
     0022 00rr                      1- 1340     	MOVAR	(_TmpAdcDataValue + 1)
     0023 15rr                      1- 1341     	SWAPR	_TmpAdcDataValue,W
     0024 00rr                      1- 1342     	MOVAR	_TmpAdcDataValue
     0025 220F                      1- 1343     	ANDIA	0x0f
     0026 11rr                      1- 1344     	IORAR	(_TmpAdcDataValue + 1),F
     0027 12rr                      1- 1345     	XORAR	_TmpAdcDataValue,F
                                    1- 1346     	.line	466, "detect.c"; 	TmpAdcDataValue += (ADR & 0x0f);  		
     0028 210F                      1- 1347     	MOVIA	0x0f
     0029 10rr                      1- 1348     	ANDAR	_ADR,W
                                    1- 1349     	BANKSEL	r0x1030
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1350     	MOVAR	r0x1030
                                    1- 1351     ;;1	MOVAR	r0x1031
                                    1- 1352     ;;1	CLRR	r0x1032
                                    1- 1353     ;;99	MOVR	r0x1031,W
     002C 2100                      1- 1354     	MOVIA	0x00
                                    1- 1355     	BANKSEL	r0x1033
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 00rr                      1- 1356     	MOVAR	r0x1033
                                    1- 1357     	BANKSEL	r0x1030
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 01rr                      1- 1358     	MOVR	r0x1030,W
                                    1- 1359     	BANKSEL	_TmpAdcDataValue
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 03rr                      1- 1360     	ADDAR	_TmpAdcDataValue,F
                                    1- 1361     	BANKSEL	r0x1033
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 1362     	MOVR	r0x1033,W
                                    1- 1363     	BANKSEL	_TmpAdcDataValue
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 34rr                      1- 1364     	ADCAR	(_TmpAdcDataValue + 1),F
                                    1- 1365     	.line	467, "detect.c"; 	gAdcDataValue += TmpAdcDataValue;
     0037 01rr                      1- 1366     	MOVR	_TmpAdcDataValue,W
                                    1- 1367     	BANKSEL	_gAdcDataValue
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 03rr                      1- 1368     	ADDAR	_gAdcDataValue,F
                                    1- 1369     	BANKSEL	_TmpAdcDataValue
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 01rr                      1- 1370     	MOVR	(_TmpAdcDataValue + 1),W
                                    1- 1371     	BANKSEL	_gAdcDataValue
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 34rr                      1- 1372     	ADCAR	(_gAdcDataValue + 1),F
     003E                           1- 1373     _02091_DS_:
                                    1- 1374     	.line	456, "detect.c"; 	for(i = 0; i < 5; i++)
                                    1- 1375     	BANKSEL	r0x102F
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 05rr                      1- 1376     	INCR	r0x102F,F
                                    1- 1377     ;;unsigned compare: left < lit(0x5=5), size=1
     0040 2105                      1- 1378     	MOVIA	0x05
     0041 04rr                      1- 1379     	SUBAR	r0x102F,W
     0042 0803                      1- 1380     	BTRSS	STATUS,0
                                    1- 1381     	MGOTO	_02090_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1382     	.line	480, "detect.c"; 	gAdcDataValue >>= 2;
     0044 1C03                      1- 1383     	BCR	STATUS,0
                                    1- 1384     	BANKSEL	_gAdcDataValue
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 13rr                      1- 1385     	RRR	(_gAdcDataValue + 1),F
     0047 13rr                      1- 1386     	RRR	_gAdcDataValue,F
     0048 1C03                      1- 1387     	BCR	STATUS,0
     0049 13rr                      1- 1388     	RRR	(_gAdcDataValue + 1),F
     004A 13rr                      1- 1389     	RRR	_gAdcDataValue,F
                                    1- 1390     	.line	481, "detect.c"; 	if(Bat_check_cnt == 0)
                                    1- 1391     	BANKSEL	_Bat_check_cnt
     004B rrrr                      3-  109 m1      .banksel ram_address
     004C 01rr                      1- 1392     	MOVR	_Bat_check_cnt,W
     004D 0903                      1- 1393     	BTRSS	STATUS,2
                                    1- 1394     	MGOTO	_02081_DS_
     004E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1395     	.line	483, "detect.c"; 	Bat_adc_value = 0;
                                    1- 1396     	BANKSEL	_Bat_adc_value
     004F rrrr                      3-  109 m1      .banksel ram_address
     0050 02rr                      1- 1397     	CLRR	_Bat_adc_value
     0051 02rr                      1- 1398     	CLRR	(_Bat_adc_value + 1)
     0052                           1- 1399     _02081_DS_:
                                    1- 1400     	.line	485, "detect.c"; 	Bat_adc_value += gAdcDataValue;
                                    1- 1401     	BANKSEL	_gAdcDataValue
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1402     	MOVR	_gAdcDataValue,W
                                    1- 1403     	BANKSEL	_Bat_adc_value
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 03rr                      1- 1404     	ADDAR	_Bat_adc_value,F
                                    1- 1405     	BANKSEL	_gAdcDataValue
     0056 rrrr                      3-  109 m1      .banksel ram_address
     0057 01rr                      1- 1406     	MOVR	(_gAdcDataValue + 1),W
                                    1- 1407     	BANKSEL	_Bat_adc_value
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 34rr                      1- 1408     	ADCAR	(_Bat_adc_value + 1),F
                                    1- 1409     	.line	486, "detect.c"; 	Bat_check_cnt++;
                                    1- 1410     	BANKSEL	_Bat_check_cnt
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 05rr                      1- 1411     	INCR	_Bat_check_cnt,F
                                    1- 1412     ;;unsigned compare: left < lit(0x4=4), size=1
                                    1- 1413     	.line	487, "detect.c"; 	if(Bat_check_cnt>= 4)
     005C 2104                      1- 1414     	MOVIA	0x04
     005D 04rr                      1- 1415     	SUBAR	_Bat_check_cnt,W
     005E 0803                      1- 1416     	BTRSS	STATUS,0
                                    1- 1417     	MGOTO	_02092_DS_
     005F 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1418     	.line	489, "detect.c"; 	Bat_check_cnt = 0;
     0060 02rr                      1- 1419     	CLRR	_Bat_check_cnt
                                    1- 1420     	.line	490, "detect.c"; 	Bat_adc_value = Bat_adc_value >> 2;
     0061 1C03                      1- 1421     	BCR	STATUS,0
                                    1- 1422     	BANKSEL	_Bat_adc_value
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 13rr                      1- 1423     	RRR	(_Bat_adc_value + 1),F
     0064 13rr                      1- 1424     	RRR	_Bat_adc_value,F
     0065 1C03                      1- 1425     	BCR	STATUS,0
     0066 13rr                      1- 1426     	RRR	(_Bat_adc_value + 1),F
     0067 13rr                      1- 1427     	RRR	_Bat_adc_value,F
                                    1- 1428     ;;unsigned compare: left < lit(0x866=2150), size=2
                                    1- 1429     	.line	574, "detect.c"; 	if(Bat_adc_value >= BAT_VOL4P20_ADC_VALUE)//BAT_VOL4P17_ADC_VALUE达到了满电了
     0068 2166                      1- 1430     	MOVIA	0x66
     0069 04rr                      1- 1431     	SUBAR	_Bat_adc_value,W
     006A 2108                      1- 1432     	MOVIA	0x08
     006B 35rr                      1- 1433     	SBCAR	(_Bat_adc_value + 1),W
     006C 0803                      1- 1434     	BTRSS	STATUS,0
                                    1- 1435     	MGOTO	_02092_DS_
     006D 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1436     	.line	576, "detect.c"; 	if(!f_charge_full)
                                    1- 1437     	BANKSEL	_sys_flag_0
     006E rrrr                      3-  109 m1      .banksel ram_address
     006F 0Err                      1- 1438     	BTRSC	_sys_flag_0,4
                                    1- 1439     	MGOTO	_02092_DS_
     0070 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1440     	.line	578, "detect.c"; 	ChrgFullTimeCount++;
                                    1- 1441     	BANKSEL	_ChrgFullTimeCount
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 05rr                      1- 1442     	INCR	_ChrgFullTimeCount,F
     0073 0D03                      1- 1443     	BTRSC	STATUS,2
     0074 05rr                      1- 1444     	INCR	(_ChrgFullTimeCount + 1),F
                                    1- 1445     	.line	579, "detect.c"; 	if(ChrgFullTimeCount == 20)//达到阈值后继续统计
     0075 01rr                      1- 1446     	MOVR	_ChrgFullTimeCount,W
     0076 2414                      1- 1447     	XORIA	0x14
     0077 0903                      1- 1448     	BTRSS	STATUS,2
                                    1- 1449     	MGOTO	_02092_DS_
     0078 3rrr                      3-   62 m1      LGOTO rom_address
     0079 01rr                      1- 1450     	MOVR	(_ChrgFullTimeCount + 1),W
     007A 2400                      1- 1451     	XORIA	0x00
     007B 0903                      1- 1452     	BTRSS	STATUS,2
                                    1- 1453     	MGOTO	_02092_DS_
     007C 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1454     	.line	581, "detect.c"; 	ChrgFullTimeCount = 0;
     007D 02rr                      1- 1455     	CLRR	_ChrgFullTimeCount
     007E 02rr                      1- 1456     	CLRR	(_ChrgFullTimeCount + 1)
                                    1- 1457     	.line	582, "detect.c"; 	f_charge_full = 1;
                                    1- 1458     	BANKSEL	_sys_flag_0
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 1Arr                      1- 1459     	BSR	_sys_flag_0,4
                                    1- 1460     	.line	583, "detect.c"; 	msg = MSG_CHRG_FULL;
     0081 2107                      1- 1461     	MOVIA	0x07
                                    1- 1462     	BANKSEL	_msg
     0082 rrrr                      3-  109 m1      .banksel ram_address
     0083 00rr                      1- 1463     	MOVAR	_msg
     0084                           1- 1464     _02092_DS_:
                                    1- 1465     	.line	593, "detect.c"; 	}
                                    1- 1466     	RETURN	
     0084 0010                      3-   39 m1      ret
                                    1- 1467     ; exit point of _Get_Bat_ChrgBat_ADCValue
                                    1- 1469     ;***
                                    1- 1470     ;  pBlock Stats: dbName = C
                                    1- 1471     ;***
                                    1- 1472     ;has an exit
                                    1- 1473     ;; Starting pCode block
                                    1- 1474     .segment "code"; module=detect, function=_AdjustHeatPwm
     0000                           1- 1476     _AdjustHeatPwm:
                                    1- 1477     ; 2 exit points
                                    1- 1478     	.line	342, "detect.c"; 	if(b_smoking||b_heating)
                                    1- 1479     	BANKSEL	_sys_flag_1
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 0Crr                      1- 1480     	BTRSC	_sys_flag_1,1
                                    1- 1481     	MGOTO	_02065_DS_
     0002 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1482     	BANKSEL	_sys_flag_3
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 09rr                      1- 1483     	BTRSS	_sys_flag_3,2
                                    1- 1484     	MGOTO	_02068_DS_
     0005 3rrr                      3-   62 m1      LGOTO rom_address
     0006                           1- 1485     _02065_DS_:
                                    1- 1486     	.line	344, "detect.c"; 	if(f_1ms_TimeOut)
                                    1- 1487     	BANKSEL	_sys_flag_2
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 0Arr                      1- 1488     	BTRSS	_sys_flag_2,4
                                    1- 1489     	MGOTO	_02068_DS_
     0008 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1490     	.line	346, "detect.c"; 	f_1ms_TimeOut = 0;
     0009 1Err                      1- 1491     	BCR	_sys_flag_2,4
                                    1- 1492     	.line	347, "detect.c"; 	NowMotorDuty++;
                                    1- 1493     	BANKSEL	_NowMotorDuty
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 05rr                      1- 1494     	INCR	_NowMotorDuty,F
                                    1- 1495     	.line	348, "detect.c"; 	if(NowMotorDuty >= TargetMotorDuty)
                                    1- 1496     	BANKSEL	_TargetMotorDuty
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 01rr                      1- 1497     	MOVR	_TargetMotorDuty,W
                                    1- 1498     	BANKSEL	_NowMotorDuty
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 04rr                      1- 1499     	SUBAR	_NowMotorDuty,W
     0010 0803                      1- 1500     	BTRSS	STATUS,0
                                    1- 1501     	MGOTO	_02062_DS_
     0011 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1502     	.line	350, "detect.c"; 	NowMotorDuty = TargetMotorDuty;
                                    1- 1503     	BANKSEL	_TargetMotorDuty
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 01rr                      1- 1504     	MOVR	_TargetMotorDuty,W
                                    1- 1505     	BANKSEL	_NowMotorDuty
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1506     	MOVAR	_NowMotorDuty
     0016                           1- 1507     _02062_DS_:
                                    1- 1508     	.line	352, "detect.c"; 	PWM2DUTY = NowMotorDuty;
                                    1- 1509     	BANKSEL	_NowMotorDuty
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 01rr                      1- 1510     	MOVR	_NowMotorDuty,W
     0018 00rr                      1- 1511     	SFUN	_PWM2DUTY
     0019                           1- 1512     _02068_DS_:
                                    1- 1513     	.line	355, "detect.c"; 	}
                                    1- 1514     	RETURN	
     0019 0010                      3-   39 m1      ret
                                    1- 1515     ; exit point of _AdjustHeatPwm
                                    1- 1517     ;***
                                    1- 1518     ;  pBlock Stats: dbName = C
                                    1- 1519     ;***
                                    1- 1520     ;has an exit
                                    1- 1521     ;7 compiler assigned registers:
                                    1- 1522     ;   r0x1025
                                    1- 1523     ;   r0x1026
                                    1- 1524     ;   r0x1027
                                    1- 1525     ;   r0x1028
                                    1- 1526     ;   r0x1029
                                    1- 1527     ;   r0x102A
                                    1- 1528     ;   STK00
                                    1- 1529     ;; Starting pCode block
                                    1- 1530     .segment "code"; module=detect, function=_adc_get
                                    1- 1532     ;local variable name mapping:
     0000                           1- 1537     _adc_get:
                                    1- 1538     ; 2 exit points
                                    1- 1539     	.line	259, "detect.c"; 	u16 adc_get(u8 ch)
                                    1- 1540     	BANKSEL	r0x1025
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1541     	MOVAR	r0x1025
                                    1- 1542     	.line	265, "detect.c"; 	b_get_adc_result = 0;
                                    1- 1543     	BANKSEL	_sys_flag_1
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 1Frr                      1- 1544     	BCR	_sys_flag_1,7
                                    1- 1545     	.line	279, "detect.c"; 	ADMD = 0x90 | ch;
     0004 2190                      1- 1546     	MOVIA	0x90
                                    1- 1547     	BANKSEL	r0x1025
     0005 rrrr                      3-  109 m1      .banksel ram_address
     0006 11rr                      1- 1548     	IORAR	r0x1025,W
     0007 00rr                      1- 1549     	MOVAR	_ADMD
                                    1- 1550     	.line	280, "detect.c"; 	ADMDbits.START = 1;
     0008 1Brr                      1- 1551     	BSR	_ADMDbits,6
     0009                           1- 1552     _02044_DS_:
                                    1- 1553     	.line	282, "detect.c"; 	while(ADMDbits.EOC == 0)
     0009 0Arr                      1- 1554     	BTRSS	_ADMDbits,5
                                    1- 1555     	MGOTO	_02044_DS_
     000A 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1556     	.line	284, "detect.c"; 	s_u16Sum = 0;
                                    1- 1557     	BANKSEL	_s_u16Sum
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 02rr                      1- 1558     	CLRR	_s_u16Sum
     000D 02rr                      1- 1559     	CLRR	(_s_u16Sum + 1)
                                    1- 1560     	.line	285, "detect.c"; 	s_u16LeastValue = 4096;
                                    1- 1561     	BANKSEL	_s_u16LeastValue
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 02rr                      1- 1562     	CLRR	_s_u16LeastValue
     0010 2110                      1- 1563     	MOVIA	0x10
     0011 00rr                      1- 1564     	MOVAR	(_s_u16LeastValue + 1)
                                    1- 1565     	.line	286, "detect.c"; 	s_u16MostValue = 0;
                                    1- 1566     	BANKSEL	_s_u16MostValue
     0012 rrrr                      3-  109 m1      .banksel ram_address
     0013 02rr                      1- 1567     	CLRR	_s_u16MostValue
     0014 02rr                      1- 1568     	CLRR	(_s_u16MostValue + 1)
                                    1- 1569     	.line	290, "detect.c"; 	for (char i = 0; i < 10; i++)
                                    1- 1570     	BANKSEL	r0x1025
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 02rr                      1- 1571     	CLRR	r0x1025
                                    1- 1572     ;;unsigned compare: left < lit(0xA=10), size=1
     0017                           1- 1573     _02056_DS_:
                                    1- 1574     	.line	290, "detect.c"; 	{
     0017 210A                      1- 1575     	MOVIA	0x0a
                                    1- 1576     	BANKSEL	r0x1025
     0018 rrrr                      3-  109 m1      .banksel ram_address
     0019 04rr                      1- 1577     	SUBAR	r0x1025,W
     001A 0C03                      1- 1578     	BTRSC	STATUS,0
                                    1- 1579     	MGOTO	_02054_DS_
     001B 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1580     	.line	293, "detect.c"; 	ADMDbits.START = 1;
     001C 1Brr                      1- 1581     	BSR	_ADMDbits,6
     001D                           1- 1582     _02047_DS_:
                                    1- 1583     	.line	295, "detect.c"; 	while(ADMDbits.EOC == 0)
     001D 0Arr                      1- 1584     	BTRSS	_ADMDbits,5
                                    1- 1585     	MGOTO	_02047_DS_
     001E 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1586     	.line	300, "detect.c"; 	l_u16NowValue = (ADD << 4) + ( 0x0F & ADR); 
     001F 01rr                      1- 1587     	MOVR	_ADD,W
                                    1- 1588     	BANKSEL	r0x1026
     0020 rrrr                      3-  109 m1      .banksel ram_address
     0021 00rr                      1- 1589     	MOVAR	r0x1026
                                    1- 1590     	BANKSEL	r0x1027
     0022 rrrr                      3-  109 m1      .banksel ram_address
     0023 02rr                      1- 1591     	CLRR	r0x1027
     0024 15rr                      1- 1592     	SWAPR	r0x1027,W
     0025 22F0                      1- 1593     	ANDIA	0xf0
                                    1- 1594     	BANKSEL	r0x1028
     0026 rrrr                      3-  109 m1      .banksel ram_address
     0027 00rr                      1- 1595     	MOVAR	r0x1028
                                    1- 1596     	BANKSEL	r0x1026
     0028 rrrr                      3-  109 m1      .banksel ram_address
     0029 15rr                      1- 1597     	SWAPR	r0x1026,W
                                    1- 1598     	BANKSEL	r0x1029
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1599     	MOVAR	r0x1029
     002C 220F                      1- 1600     	ANDIA	0x0f
                                    1- 1601     	BANKSEL	r0x1028
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 11rr                      1- 1602     	IORAR	r0x1028,F
                                    1- 1603     	BANKSEL	r0x1029
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 12rr                      1- 1604     	XORAR	r0x1029,F
     0031 210F                      1- 1605     	MOVIA	0x0f
     0032 10rr                      1- 1606     	ANDAR	_ADR,W
                                    1- 1607     	BANKSEL	r0x1026
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 00rr                      1- 1608     	MOVAR	r0x1026
                                    1- 1609     	BANKSEL	r0x1027
     0035 rrrr                      3-  109 m1      .banksel ram_address
     0036 00rr                      1- 1610     	MOVAR	r0x1027
                                    1- 1611     	BANKSEL	r0x1029
     0037 rrrr                      3-  109 m1      .banksel ram_address
     0038 03rr                      1- 1612     	ADDAR	r0x1029,F
     0039 2100                      1- 1613     	MOVIA	0x00
                                    1- 1614     	BANKSEL	r0x1028
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 34rr                      1- 1615     	ADCAR	r0x1028,F
                                    1- 1616     	.line	302, "detect.c"; 	if(l_u16NowValue > s_u16MostValue)				//取极大值
                                    1- 1617     	BANKSEL	r0x1029
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 01rr                      1- 1618     	MOVR	r0x1029,W
                                    1- 1619     	BANKSEL	_s_u16MostValue
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 04rr                      1- 1620     	SUBAR	_s_u16MostValue,W
                                    1- 1621     	BANKSEL	r0x1028
     0040 rrrr                      3-  109 m1      .banksel ram_address
     0041 01rr                      1- 1622     	MOVR	r0x1028,W
                                    1- 1623     	BANKSEL	_s_u16MostValue
     0042 rrrr                      3-  109 m1      .banksel ram_address
     0043 35rr                      1- 1624     	SBCAR	(_s_u16MostValue + 1),W
     0044 0C03                      1- 1625     	BTRSC	STATUS,0
                                    1- 1626     	MGOTO	_02051_DS_
     0045 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1627     	.line	304, "detect.c"; 	s_u16MostValue = l_u16NowValue;
                                    1- 1628     	BANKSEL	r0x1029
     0046 rrrr                      3-  109 m1      .banksel ram_address
     0047 01rr                      1- 1629     	MOVR	r0x1029,W
                                    1- 1630     	BANKSEL	_s_u16MostValue
     0048 rrrr                      3-  109 m1      .banksel ram_address
     0049 00rr                      1- 1631     	MOVAR	_s_u16MostValue
                                    1- 1632     	BANKSEL	r0x1028
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 01rr                      1- 1633     	MOVR	r0x1028,W
                                    1- 1634     	BANKSEL	_s_u16MostValue
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 00rr                      1- 1635     	MOVAR	(_s_u16MostValue + 1)
     004E                           1- 1636     _02051_DS_:
                                    1- 1637     	.line	306, "detect.c"; 	if(l_u16NowValue < s_u16LeastValue)				//取极小值
                                    1- 1638     	BANKSEL	_s_u16LeastValue
     004E rrrr                      3-  109 m1      .banksel ram_address
     004F 01rr                      1- 1639     	MOVR	_s_u16LeastValue,W
                                    1- 1640     	BANKSEL	r0x1029
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 04rr                      1- 1641     	SUBAR	r0x1029,W
                                    1- 1642     	BANKSEL	_s_u16LeastValue
     0052 rrrr                      3-  109 m1      .banksel ram_address
     0053 01rr                      1- 1643     	MOVR	(_s_u16LeastValue + 1),W
                                    1- 1644     	BANKSEL	r0x1028
     0054 rrrr                      3-  109 m1      .banksel ram_address
     0055 35rr                      1- 1645     	SBCAR	r0x1028,W
     0056 0C03                      1- 1646     	BTRSC	STATUS,0
                                    1- 1647     	MGOTO	_02053_DS_
     0057 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1648     	.line	308, "detect.c"; 	s_u16LeastValue = l_u16NowValue;
                                    1- 1649     	BANKSEL	r0x1029
     0058 rrrr                      3-  109 m1      .banksel ram_address
     0059 01rr                      1- 1650     	MOVR	r0x1029,W
                                    1- 1651     	BANKSEL	_s_u16LeastValue
     005A rrrr                      3-  109 m1      .banksel ram_address
     005B 00rr                      1- 1652     	MOVAR	_s_u16LeastValue
                                    1- 1653     	BANKSEL	r0x1028
     005C rrrr                      3-  109 m1      .banksel ram_address
     005D 01rr                      1- 1654     	MOVR	r0x1028,W
                                    1- 1655     	BANKSEL	_s_u16LeastValue
     005E rrrr                      3-  109 m1      .banksel ram_address
     005F 00rr                      1- 1656     	MOVAR	(_s_u16LeastValue + 1)
     0060                           1- 1657     _02053_DS_:
                                    1- 1658     	.line	311, "detect.c"; 	s_u16Sum += l_u16NowValue;	//累加
                                    1- 1659     	BANKSEL	r0x1029
     0060 rrrr                      3-  109 m1      .banksel ram_address
     0061 01rr                      1- 1660     	MOVR	r0x1029,W
                                    1- 1661     	BANKSEL	_s_u16Sum
     0062 rrrr                      3-  109 m1      .banksel ram_address
     0063 03rr                      1- 1662     	ADDAR	_s_u16Sum,F
                                    1- 1663     	BANKSEL	r0x1028
     0064 rrrr                      3-  109 m1      .banksel ram_address
     0065 01rr                      1- 1664     	MOVR	r0x1028,W
                                    1- 1665     	BANKSEL	_s_u16Sum
     0066 rrrr                      3-  109 m1      .banksel ram_address
     0067 34rr                      1- 1666     	ADCAR	(_s_u16Sum + 1),F
                                    1- 1667     	.line	290, "detect.c"; 	for (char i = 0; i < 10; i++)
                                    1- 1668     	BANKSEL	r0x1025
     0068 rrrr                      3-  109 m1      .banksel ram_address
     0069 05rr                      1- 1669     	INCR	r0x1025,F
                                    1- 1670     	.line	290, "detect.c"; 	{
                                    1- 1671     	MGOTO	_02056_DS_
     006A 3rrr                      3-   62 m1      LGOTO rom_address
     006B                           1- 1672     _02054_DS_:
                                    1- 1673     	.line	325, "detect.c"; 	s_u16Sum -= s_u16MostValue;
                                    1- 1674     	BANKSEL	_s_u16MostValue
     006B rrrr                      3-  109 m1      .banksel ram_address
     006C 01rr                      1- 1675     	MOVR	_s_u16MostValue,W
                                    1- 1676     	BANKSEL	_s_u16Sum
     006D rrrr                      3-  109 m1      .banksel ram_address
     006E 04rr                      1- 1677     	SUBAR	_s_u16Sum,F
                                    1- 1678     	BANKSEL	_s_u16MostValue
     006F rrrr                      3-  109 m1      .banksel ram_address
     0070 01rr                      1- 1679     	MOVR	(_s_u16MostValue + 1),W
                                    1- 1680     	BANKSEL	_s_u16Sum
     0071 rrrr                      3-  109 m1      .banksel ram_address
     0072 35rr                      1- 1681     	SBCAR	(_s_u16Sum + 1),F
                                    1- 1682     	.line	326, "detect.c"; 	s_u16Sum -= s_u16LeastValue;// - s_u16LeastValue;
                                    1- 1683     	BANKSEL	_s_u16LeastValue
     0073 rrrr                      3-  109 m1      .banksel ram_address
     0074 01rr                      1- 1684     	MOVR	_s_u16LeastValue,W
                                    1- 1685     	BANKSEL	_s_u16Sum
     0075 rrrr                      3-  109 m1      .banksel ram_address
     0076 04rr                      1- 1686     	SUBAR	_s_u16Sum,F
                                    1- 1687     	BANKSEL	_s_u16LeastValue
     0077 rrrr                      3-  109 m1      .banksel ram_address
     0078 01rr                      1- 1688     	MOVR	(_s_u16LeastValue + 1),W
                                    1- 1689     	BANKSEL	_s_u16Sum
     0079 rrrr                      3-  109 m1      .banksel ram_address
     007A 35rr                      1- 1690     	SBCAR	(_s_u16Sum + 1),F
                                    1- 1691     	.line	327, "detect.c"; 	R_DATA = s_u16Sum >> 3;
     007B 1C03                      1- 1692     	BCR	STATUS,0
     007C 13rr                      1- 1693     	RRR	(_s_u16Sum + 1),W
                                    1- 1694     	BANKSEL	r0x1026
     007D rrrr                      3-  109 m1      .banksel ram_address
     007E 00rr                      1- 1695     	MOVAR	r0x1026
                                    1- 1696     	BANKSEL	_s_u16Sum
     007F rrrr                      3-  109 m1      .banksel ram_address
     0080 13rr                      1- 1697     	RRR	_s_u16Sum,W
                                    1- 1698     	BANKSEL	r0x1025
     0081 rrrr                      3-  109 m1      .banksel ram_address
     0082 00rr                      1- 1699     	MOVAR	r0x1025
     0083 1C03                      1- 1700     	BCR	STATUS,0
                                    1- 1701     	BANKSEL	r0x1026
     0084 rrrr                      3-  109 m1      .banksel ram_address
     0085 13rr                      1- 1702     	RRR	r0x1026,F
                                    1- 1703     	BANKSEL	r0x1025
     0086 rrrr                      3-  109 m1      .banksel ram_address
     0087 13rr                      1- 1704     	RRR	r0x1025,F
     0088 1C03                      1- 1705     	BCR	STATUS,0
                                    1- 1706     	BANKSEL	r0x1026
     0089 rrrr                      3-  109 m1      .banksel ram_address
     008A 13rr                      1- 1707     	RRR	r0x1026,F
                                    1- 1708     	BANKSEL	r0x1025
     008B rrrr                      3-  109 m1      .banksel ram_address
     008C 13rr                      1- 1709     	RRR	r0x1025,F
                                    1- 1710     	.line	329, "detect.c"; 	b_get_adc_result = 1;
                                    1- 1711     	BANKSEL	_sys_flag_1
     008D rrrr                      3-  109 m1      .banksel ram_address
     008E 1Brr                      1- 1712     	BSR	_sys_flag_1,7
                                    1- 1713     	.line	337, "detect.c"; 	return R_DATA;
                                    1- 1714     	BANKSEL	r0x1025
     008F rrrr                      3-  109 m1      .banksel ram_address
     0090 01rr                      1- 1715     	MOVR	r0x1025,W
     0091 00rr                      1- 1716     	MOVAR	STK00
                                    1- 1717     	BANKSEL	r0x1026
     0092 rrrr                      3-  109 m1      .banksel ram_address
     0093 01rr                      1- 1718     	MOVR	r0x1026,W
                                    1- 1719     	.line	338, "detect.c"; 	}
                                    1- 1720     	RETURN	
     0094 0010                      3-   39 m1      ret
                                    1- 1721     ; exit point of _adc_get
                                    1- 1723     ;***
                                    1- 1724     ;  pBlock Stats: dbName = C
                                    1- 1725     ;***
                                    1- 1726     ;has an exit
                                    1- 1727     ;functions called:
                                    1- 1728     ;   _ADC_Convert_Pre
                                    1- 1729     ;   _F_wait_eoc
                                    1- 1730     ;   _ADC_Convert_Pre
                                    1- 1731     ;   _F_wait_eoc
                                    1- 1732     ;10 compiler assigned registers:
                                    1- 1733     ;   r0x1034
                                    1- 1734     ;   r0x1035
                                    1- 1735     ;   r0x1036
                                    1- 1736     ;   r0x1037
                                    1- 1737     ;   r0x1038
                                    1- 1738     ;   r0x1039
                                    1- 1739     ;   r0x103A
                                    1- 1740     ;   r0x103B
                                    1- 1741     ;   r0x103C
                                    1- 1742     ;   STK00
                                    1- 1743     ;; Starting pCode block
                                    1- 1744     .segment "code"; module=detect, function=_Get_adc_data
                                    1- 1746     ;local variable name mapping:
     0000                           1- 1751     _Get_adc_data:
                                    1- 1752     ; 2 exit points
                                    1- 1753     	.line	176, "detect.c"; 	u16 Get_adc_data(u8 ch)
                                    1- 1754     	BANKSEL	r0x1034
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1755     	MOVAR	r0x1034
                                    1- 1756     	.line	179, "detect.c"; 	u16  temp,R_DATA = 0;		
                                    1- 1757     	BANKSEL	r0x1035
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 1758     	CLRR	r0x1035
                                    1- 1759     	BANKSEL	r0x1036
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 02rr                      1- 1760     	CLRR	r0x1036
                                    1- 1761     	.line	181, "detect.c"; 	ADMD = 0x90 | ch;			
     0006 2190                      1- 1762     	MOVIA	0x90
                                    1- 1763     	BANKSEL	r0x1034
     0007 rrrr                      3-  109 m1      .banksel ram_address
     0008 11rr                      1- 1764     	IORAR	r0x1034,W
     0009 00rr                      1- 1765     	MOVAR	_ADMD
                                    1- 1766     	.line	182, "detect.c"; 	ADC_Convert_Pre();
                                    1- 1767     	MCALL	_ADC_Convert_Pre
     000A 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1768     	.line	189, "detect.c"; 	for(i = 0; i < 5; i++)//8
                                    1- 1769     	BANKSEL	r0x1034
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 02rr                      1- 1770     	CLRR	r0x1034
     000D                           1- 1771     _02038_DS_:
                                    1- 1772     	.line	191, "detect.c"; 	ADMDbits.START = 1;
     000D 1Brr                      1- 1773     	BSR	_ADMDbits,6
                                    1- 1774     	.line	192, "detect.c"; 	F_wait_eoc();
                                    1- 1775     	MCALL	_F_wait_eoc
     000E 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1776     	.line	193, "detect.c"; 	if(i > 0)
                                    1- 1777     	BANKSEL	r0x1034
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 01rr                      1- 1778     	MOVR	r0x1034,W
     0011 0D03                      1- 1779     	BTRSC	STATUS,2
                                    1- 1780     	MGOTO	_02039_DS_
     0012 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1781     	.line	195, "detect.c"; 	temp = ADD;
     0013 01rr                      1- 1782     	MOVR	_ADD,W
                                    1- 1783     	BANKSEL	r0x1037
     0014 rrrr                      3-  109 m1      .banksel ram_address
     0015 00rr                      1- 1784     	MOVAR	r0x1037
                                    1- 1785     	BANKSEL	r0x1038
     0016 rrrr                      3-  109 m1      .banksel ram_address
     0017 02rr                      1- 1786     	CLRR	r0x1038
                                    1- 1787     	.line	196, "detect.c"; 	temp <<= 4;
     0018 15rr                      1- 1788     	SWAPR	r0x1038,W
     0019 22F0                      1- 1789     	ANDIA	0xf0
                                    1- 1790     	BANKSEL	r0x1039
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 00rr                      1- 1791     	MOVAR	r0x1039
                                    1- 1792     	BANKSEL	r0x1037
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 15rr                      1- 1793     	SWAPR	r0x1037,W
                                    1- 1794     	BANKSEL	r0x103A
     001E rrrr                      3-  109 m1      .banksel ram_address
     001F 00rr                      1- 1795     	MOVAR	r0x103A
     0020 220F                      1- 1796     	ANDIA	0x0f
                                    1- 1797     	BANKSEL	r0x1039
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 11rr                      1- 1798     	IORAR	r0x1039,F
                                    1- 1799     	BANKSEL	r0x103A
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 12rr                      1- 1800     	XORAR	r0x103A,F
                                    1- 1801     	.line	197, "detect.c"; 	temp += (ADR & 0x0f);  		
     0025 210F                      1- 1802     	MOVIA	0x0f
     0026 10rr                      1- 1803     	ANDAR	_ADR,W
                                    1- 1804     ;;3	MOVAR	r0x1037
                                    1- 1805     	BANKSEL	r0x1038
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 00rr                      1- 1806     	MOVAR	r0x1038
     0029 2100                      1- 1807     	MOVIA	0x00
                                    1- 1808     	BANKSEL	r0x103C
     002A rrrr                      3-  109 m1      .banksel ram_address
     002B 00rr                      1- 1809     	MOVAR	r0x103C
                                    1- 1810     ;;100	MOVR	r0x1037,W
                                    1- 1811     	BANKSEL	r0x1038
     002C rrrr                      3-  109 m1      .banksel ram_address
     002D 01rr                      1- 1812     	MOVR	r0x1038,W
                                    1- 1813     	BANKSEL	r0x1037
     002E rrrr                      3-  109 m1      .banksel ram_address
     002F 00rr                      1- 1814     	MOVAR	r0x1037
                                    1- 1815     	BANKSEL	r0x103A
     0030 rrrr                      3-  109 m1      .banksel ram_address
     0031 03rr                      1- 1816     	ADDAR	r0x103A,F
                                    1- 1817     	BANKSEL	r0x103C
     0032 rrrr                      3-  109 m1      .banksel ram_address
     0033 01rr                      1- 1818     	MOVR	r0x103C,W
                                    1- 1819     	BANKSEL	r0x1039
     0034 rrrr                      3-  109 m1      .banksel ram_address
     0035 34rr                      1- 1820     	ADCAR	r0x1039,F
                                    1- 1821     	.line	198, "detect.c"; 	R_DATA += temp;
                                    1- 1822     	BANKSEL	r0x103A
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 01rr                      1- 1823     	MOVR	r0x103A,W
                                    1- 1824     	BANKSEL	r0x1035
     0038 rrrr                      3-  109 m1      .banksel ram_address
     0039 03rr                      1- 1825     	ADDAR	r0x1035,F
                                    1- 1826     	BANKSEL	r0x1039
     003A rrrr                      3-  109 m1      .banksel ram_address
     003B 01rr                      1- 1827     	MOVR	r0x1039,W
                                    1- 1828     	BANKSEL	r0x1036
     003C rrrr                      3-  109 m1      .banksel ram_address
     003D 34rr                      1- 1829     	ADCAR	r0x1036,F
     003E                           1- 1830     _02039_DS_:
                                    1- 1831     	.line	189, "detect.c"; 	for(i = 0; i < 5; i++)//8
                                    1- 1832     	BANKSEL	r0x1034
     003E rrrr                      3-  109 m1      .banksel ram_address
     003F 05rr                      1- 1833     	INCR	r0x1034,F
                                    1- 1834     ;;unsigned compare: left < lit(0x5=5), size=1
     0040 2105                      1- 1835     	MOVIA	0x05
     0041 04rr                      1- 1836     	SUBAR	r0x1034,W
     0042 0803                      1- 1837     	BTRSS	STATUS,0
                                    1- 1838     	MGOTO	_02038_DS_
     0043 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1839     	.line	202, "detect.c"; 	R_DATA >>= 2;//3; 	
     0044 1C03                      1- 1840     	BCR	STATUS,0
                                    1- 1841     	BANKSEL	r0x1036
     0045 rrrr                      3-  109 m1      .banksel ram_address
     0046 13rr                      1- 1842     	RRR	r0x1036,F
                                    1- 1843     	BANKSEL	r0x1035
     0047 rrrr                      3-  109 m1      .banksel ram_address
     0048 13rr                      1- 1844     	RRR	r0x1035,F
     0049 1C03                      1- 1845     	BCR	STATUS,0
                                    1- 1846     	BANKSEL	r0x1036
     004A rrrr                      3-  109 m1      .banksel ram_address
     004B 13rr                      1- 1847     	RRR	r0x1036,F
                                    1- 1848     	BANKSEL	r0x1035
     004C rrrr                      3-  109 m1      .banksel ram_address
     004D 13rr                      1- 1849     	RRR	r0x1035,F
                                    1- 1850     	.line	203, "detect.c"; 	return R_DATA;
     004E 01rr                      1- 1851     	MOVR	r0x1035,W
     004F 00rr                      1- 1852     	MOVAR	STK00
                                    1- 1853     	BANKSEL	r0x1036
     0050 rrrr                      3-  109 m1      .banksel ram_address
     0051 01rr                      1- 1854     	MOVR	r0x1036,W
                                    1- 1855     	.line	205, "detect.c"; 	}
                                    1- 1856     	RETURN	
     0052 0010                      3-   39 m1      ret
                                    1- 1857     ; exit point of _Get_adc_data
                                    1- 1859     ;***
                                    1- 1860     ;  pBlock Stats: dbName = C
                                    1- 1861     ;***
                                    1- 1862     ;has an exit
                                    1- 1863     ;9 compiler assigned registers:
                                    1- 1864     ;   r0x103D
                                    1- 1865     ;   STK00
                                    1- 1866     ;   r0x103E
                                    1- 1867     ;   STK01
                                    1- 1868     ;   r0x103F
                                    1- 1869     ;   STK02
                                    1- 1870     ;   r0x1040
                                    1- 1871     ;   r0x1041
                                    1- 1872     ;   r0x1042
                                    1- 1873     ;; Starting pCode block
                                    1- 1874     .segment "code"; module=detect, function=_getAbs
                                    1- 1876     ;local variable name mapping:
     0000                           1- 1879     _getAbs:
                                    1- 1880     ; 2 exit points
                                    1- 1881     	.line	164, "detect.c"; 	u16 getAbs(u16 num_a, u16 num_b)
                                    1- 1882     	BANKSEL	r0x103D
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 00rr                      1- 1883     	MOVAR	r0x103D
     0002 01rr                      1- 1884     	MOVR	STK00,W
                                    1- 1885     	BANKSEL	r0x103E
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 00rr                      1- 1886     	MOVAR	r0x103E
     0005 01rr                      1- 1887     	MOVR	STK01,W
                                    1- 1888     	BANKSEL	r0x103F
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 00rr                      1- 1889     	MOVAR	r0x103F
     0008 01rr                      1- 1890     	MOVR	STK02,W
                                    1- 1891     	BANKSEL	r0x1040
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 00rr                      1- 1892     	MOVAR	r0x1040
                                    1- 1893     	.line	166, "detect.c"; 	if (num_a > num_b)
                                    1- 1894     	BANKSEL	r0x103E
     000B rrrr                      3-  109 m1      .banksel ram_address
     000C 01rr                      1- 1895     	MOVR	r0x103E,W
                                    1- 1896     	BANKSEL	r0x1040
     000D rrrr                      3-  109 m1      .banksel ram_address
     000E 04rr                      1- 1897     	SUBAR	r0x1040,W
                                    1- 1898     	BANKSEL	r0x103D
     000F rrrr                      3-  109 m1      .banksel ram_address
     0010 01rr                      1- 1899     	MOVR	r0x103D,W
                                    1- 1900     	BANKSEL	r0x103F
     0011 rrrr                      3-  109 m1      .banksel ram_address
     0012 35rr                      1- 1901     	SBCAR	r0x103F,W
     0013 0C03                      1- 1902     	BTRSC	STATUS,0
                                    1- 1903     	MGOTO	_02028_DS_
     0014 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1904     	.line	168, "detect.c"; 	return num_a - num_b;
                                    1- 1905     	BANKSEL	r0x1040
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 01rr                      1- 1906     	MOVR	r0x1040,W
                                    1- 1907     	BANKSEL	r0x103E
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 04rr                      1- 1908     	SUBAR	r0x103E,W
                                    1- 1909     	BANKSEL	r0x1041
     0019 rrrr                      3-  109 m1      .banksel ram_address
     001A 00rr                      1- 1910     	MOVAR	r0x1041
                                    1- 1911     	BANKSEL	r0x103F
     001B rrrr                      3-  109 m1      .banksel ram_address
     001C 01rr                      1- 1912     	MOVR	r0x103F,W
                                    1- 1913     	BANKSEL	r0x103D
     001D rrrr                      3-  109 m1      .banksel ram_address
     001E 35rr                      1- 1914     	SBCAR	r0x103D,W
                                    1- 1915     	BANKSEL	r0x1042
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1- 1916     	MOVAR	r0x1042
                                    1- 1917     	BANKSEL	r0x1041
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 01rr                      1- 1918     	MOVR	r0x1041,W
     0023 00rr                      1- 1919     	MOVAR	STK00
                                    1- 1920     	BANKSEL	r0x1042
     0024 rrrr                      3-  109 m1      .banksel ram_address
     0025 01rr                      1- 1921     	MOVR	r0x1042,W
                                    1- 1922     	MGOTO	_02030_DS_
     0026 3rrr                      3-   62 m1      LGOTO rom_address
     0027                           1- 1923     _02028_DS_:
                                    1- 1924     	.line	172, "detect.c"; 	return num_b - num_a;
                                    1- 1925     	BANKSEL	r0x103E
     0027 rrrr                      3-  109 m1      .banksel ram_address
     0028 01rr                      1- 1926     	MOVR	r0x103E,W
                                    1- 1927     	BANKSEL	r0x1040
     0029 rrrr                      3-  109 m1      .banksel ram_address
     002A 04rr                      1- 1928     	SUBAR	r0x1040,W
                                    1- 1929     	BANKSEL	r0x103E
     002B rrrr                      3-  109 m1      .banksel ram_address
     002C 00rr                      1- 1930     	MOVAR	r0x103E
                                    1- 1931     	BANKSEL	r0x103D
     002D rrrr                      3-  109 m1      .banksel ram_address
     002E 01rr                      1- 1932     	MOVR	r0x103D,W
                                    1- 1933     	BANKSEL	r0x103F
     002F rrrr                      3-  109 m1      .banksel ram_address
     0030 35rr                      1- 1934     	SBCAR	r0x103F,W
                                    1- 1935     	BANKSEL	r0x103D
     0031 rrrr                      3-  109 m1      .banksel ram_address
     0032 00rr                      1- 1936     	MOVAR	r0x103D
                                    1- 1937     	BANKSEL	r0x103E
     0033 rrrr                      3-  109 m1      .banksel ram_address
     0034 01rr                      1- 1938     	MOVR	r0x103E,W
     0035 00rr                      1- 1939     	MOVAR	STK00
                                    1- 1940     	BANKSEL	r0x103D
     0036 rrrr                      3-  109 m1      .banksel ram_address
     0037 01rr                      1- 1941     	MOVR	r0x103D,W
     0038                           1- 1942     _02030_DS_:
                                    1- 1943     	.line	174, "detect.c"; 	}
                                    1- 1944     	RETURN	
     0038 0010                      3-   39 m1      ret
                                    1- 1945     ; exit point of _getAbs
                                    1- 1947     ;***
                                    1- 1948     ;  pBlock Stats: dbName = C
                                    1- 1949     ;***
                                    1- 1950     ;has an exit
                                    1- 1951     ;; Starting pCode block
                                    1- 1952     .segment "code"; module=detect, function=_F_wait_eoc
     0000                           1- 1954     _F_wait_eoc:
                                    1- 1955     ; 2 exit points
     0000                           1- 1956     _02022_DS_:
                                    1- 1957     	.line	160, "detect.c"; 	while(ADMDbits.EOC==0)
     0000 0Arr                      1- 1958     	BTRSS	_ADMDbits,5
                                    1- 1959     	MGOTO	_02022_DS_
     0001 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1960     	.line	162, "detect.c"; 	}
                                    1- 1961     	RETURN	
     0002 0010                      3-   39 m1      ret
                                    1- 1962     ; exit point of _F_wait_eoc
                                    1- 1964     ;***
                                    1- 1965     ;  pBlock Stats: dbName = C
                                    1- 1966     ;***
                                    1- 1967     ;has an exit
                                    1- 1968     ;functions called:
                                    1- 1969     ;   _NOP10_
                                    1- 1970     ;   _NOP10_
                                    1- 1971     ;1 compiler assigned register :
                                    1- 1972     ;   r0x102E
                                    1- 1973     ;; Starting pCode block
                                    1- 1974     .segment "code"; module=detect, function=_ADC_Convert_Pre
                                    1- 1976     ;local variable name mapping:
     0000                           1- 1978     _ADC_Convert_Pre:
                                    1- 1979     ; 2 exit points
                                    1- 1980     	.line	151, "detect.c"; 	for(char i=0; i < 32;i++)
                                    1- 1981     	BANKSEL	r0x102E
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 1982     	CLRR	r0x102E
                                    1- 1983     ;;unsigned compare: left < lit(0x20=32), size=1
     0002                           1- 1984     _02015_DS_:
     0002 2120                      1- 1985     	MOVIA	0x20
                                    1- 1986     	BANKSEL	r0x102E
     0003 rrrr                      3-  109 m1      .banksel ram_address
     0004 04rr                      1- 1987     	SUBAR	r0x102E,W
     0005 0C03                      1- 1988     	BTRSC	STATUS,0
                                    1- 1989     	MGOTO	_02017_DS_
     0006 3rrr                      3-   62 m1      LGOTO rom_address
                                    1- 1990     	.line	153, "detect.c"; 	ADMDbits.START = 1;
     0007 1Brr                      1- 1991     	BSR	_ADMDbits,6
                                    1- 1992     	.line	154, "detect.c"; 	NOP10_();
                                    1- 1993     	MCALL	_NOP10_
     0008 2rrr                      3-   65 m1      LCALL rom_address
                                    1- 1994     	.line	151, "detect.c"; 	for(char i=0; i < 32;i++)
                                    1- 1995     	BANKSEL	r0x102E
     0009 rrrr                      3-  109 m1      .banksel ram_address
     000A 05rr                      1- 1996     	INCR	r0x102E,F
                                    1- 1997     	MGOTO	_02015_DS_
     000B 3rrr                      3-   62 m1      LGOTO rom_address
     000C                           1- 1998     _02017_DS_:
                                    1- 1999     	.line	156, "detect.c"; 	}
                                    1- 2000     	RETURN	
     000C 0010                      3-   39 m1      ret
                                    1- 2001     ; exit point of _ADC_Convert_Pre
                                    1- 2003     ;***
                                    1- 2004     ;  pBlock Stats: dbName = C
                                    1- 2005     ;***
                                    1- 2006     ;has an exit
                                    1- 2007     ;; Starting pCode block
                                    1- 2008     .segment "code"; module=detect, function=_NOP10_
     0000                           1- 2010     _NOP10_:
                                    1- 2011     ; 2 exit points
                                    1- 2012     	.line	145, "detect.c"; 	NOP();NOP();NOP();NOP();NOP();
     0000 0000                      1- 2013     	nop
     0001 0000                      1- 2014     	nop
     0002 0000                      1- 2015     	nop
     0003 0000                      1- 2016     	nop
     0004 0000                      1- 2017     	nop
                                    1- 2018     	.line	146, "detect.c"; 	NOP();NOP();NOP();NOP();NOP();
     0005 0000                      1- 2019     	nop
     0006 0000                      1- 2020     	nop
     0007 0000                      1- 2021     	nop
     0008 0000                      1- 2022     	nop
     0009 0000                      1- 2023     	nop
                                    1- 2024     	.line	147, "detect.c"; 	}
                                    1- 2025     	RETURN	
     000A 0010                      3-   39 m1      ret
                                    1- 2026     ; exit point of _NOP10_
                                    1- 2028     ;***
                                    1- 2029     ;  pBlock Stats: dbName = C
                                    1- 2030     ;***
                                    1- 2031     ;has an exit
                                    1- 2032     ;; Starting pCode block
                                    1- 2033     .segment "code"; module=detect, function=_detect_param_init
     0000                           1- 2035     _detect_param_init:
                                    1- 2036     ; 2 exit points
                                    1- 2037     	.line	100, "detect.c"; 	usb_check_ad_time_cnt = 0;
                                    1- 2038     	BANKSEL	_usb_check_ad_time_cnt
     0000 rrrr                      3-  109 m1      .banksel ram_address
     0001 02rr                      1- 2039     	CLRR	_usb_check_ad_time_cnt
                                    1- 2040     	.line	101, "detect.c"; 	Chrg_On_time_count = 0;
                                    1- 2041     	BANKSEL	_Chrg_On_time_count
     0002 rrrr                      3-  109 m1      .banksel ram_address
     0003 02rr                      1- 2042     	CLRR	_Chrg_On_time_count
                                    1- 2043     	.line	103, "detect.c"; 	Heat_On_time_count = 0;
                                    1- 2044     	BANKSEL	_Heat_On_time_count
     0004 rrrr                      3-  109 m1      .banksel ram_address
     0005 02rr                      1- 2045     	CLRR	_Heat_On_time_count
                                    1- 2046     	.line	104, "detect.c"; 	Heat_Off_time_count = 0;
                                    1- 2047     	BANKSEL	_Heat_Off_time_count
     0006 rrrr                      3-  109 m1      .banksel ram_address
     0007 02rr                      1- 2048     	CLRR	_Heat_Off_time_count
                                    1- 2049     	.line	105, "detect.c"; 	f_charging = 0;
                                    1- 2050     	BANKSEL	_sys_flag_0
     0008 rrrr                      3-  109 m1      .banksel ram_address
     0009 1Frr                      1- 2051     	BCR	_sys_flag_0,6
                                    1- 2052     	.line	108, "detect.c"; 	OverCurrent_check_cnt = 0;
                                    1- 2053     	BANKSEL	_OverCurrent_check_cnt
     000A rrrr                      3-  109 m1      .banksel ram_address
     000B 02rr                      1- 2054     	CLRR	_OverCurrent_check_cnt
                                    1- 2055     	.line	110, "detect.c"; 	f_charge_full = 0;
                                    1- 2056     	BANKSEL	_sys_flag_0
     000C rrrr                      3-  109 m1      .banksel ram_address
     000D 1Err                      1- 2057     	BCR	_sys_flag_0,4
                                    1- 2058     	.line	111, "detect.c"; 	b_smoking = 0;
                                    1- 2059     	BANKSEL	_sys_flag_1
     000E rrrr                      3-  109 m1      .banksel ram_address
     000F 1Crr                      1- 2060     	BCR	_sys_flag_1,1
                                    1- 2061     	.line	113, "detect.c"; 	ChrgFullTimeCount = 0;
                                    1- 2062     	BANKSEL	_ChrgFullTimeCount
     0010 rrrr                      3-  109 m1      .banksel ram_address
     0011 02rr                      1- 2063     	CLRR	_ChrgFullTimeCount
     0012 02rr                      1- 2064     	CLRR	(_ChrgFullTimeCount + 1)
                                    1- 2065     	.line	122, "detect.c"; 	GroupColourIndex = 0;
                                    1- 2066     	BANKSEL	_GroupColourIndex
     0013 rrrr                      3-  109 m1      .banksel ram_address
     0014 02rr                      1- 2067     	CLRR	_GroupColourIndex
                                    1- 2068     	.line	129, "detect.c"; 	b_heating = 0;
                                    1- 2069     	BANKSEL	_sys_flag_3
     0015 rrrr                      3-  109 m1      .banksel ram_address
     0016 1Drr                      1- 2070     	BCR	_sys_flag_3,2
                                    1- 2071     	.line	130, "detect.c"; 	SmokingKeepTime = 0;//吸烟时长，主要是为了处理在吸烟前0.3秒是否需要全功率输出的问题
                                    1- 2072     	BANKSEL	_SmokingKeepTime
     0017 rrrr                      3-  109 m1      .banksel ram_address
     0018 02rr                      1- 2073     	CLRR	_SmokingKeepTime
     0019 02rr                      1- 2074     	CLRR	(_SmokingKeepTime + 1)
                                    1- 2075     	.line	135, "detect.c"; 	b_heater_detect_mask = 0;
                                    1- 2076     	BANKSEL	_sys_flag_2
     001A rrrr                      3-  109 m1      .banksel ram_address
     001B 1Err                      1- 2077     	BCR	_sys_flag_2,5
                                    1- 2078     	.line	136, "detect.c"; 	SmokeState = 0;
                                    1- 2079     	BANKSEL	_SmokeState
     001C rrrr                      3-  109 m1      .banksel ram_address
     001D 02rr                      1- 2080     	CLRR	_SmokeState
                                    1- 2081     	.line	137, "detect.c"; 	now_ch = C_Quarter_VDD;
     001E 210B                      1- 2082     	MOVIA	0x0b
                                    1- 2083     	BANKSEL	_now_ch
     001F rrrr                      3-  109 m1      .banksel ram_address
     0020 00rr                      1- 2084     	MOVAR	_now_ch
                                    1- 2085     	.line	138, "detect.c"; 	battery_low_cnt = 0;
                                    1- 2086     	BANKSEL	_battery_low_cnt
     0021 rrrr                      3-  109 m1      .banksel ram_address
     0022 02rr                      1- 2087     	CLRR	_battery_low_cnt
                                    1- 2088     	.line	139, "detect.c"; 	disp_delay_time_cnt = 0;
                                    1- 2089     	BANKSEL	_disp_delay_time_cnt
     0023 rrrr                      3-  109 m1      .banksel ram_address
     0024 02rr                      1- 2090     	CLRR	_disp_delay_time_cnt
                                    1- 2091     	.line	141, "detect.c"; 	}
                                    1- 2092     	RETURN	
     0025 0010                      3-   39 m1      ret
                                    1- 2093     ; exit point of _detect_param_init
                                    1- 2096     ;	code size estimation:
                                    1- 2097     ;	  720+  277 =   997 instructions ( 2548 byte)
                                    1- 2099     	end

SYMBOL TABLE            TYPE     VALUE
__pin_count__           Constant 0000000E
__processor__           Constant 00810625
C                       Constant 00000000
DC                      Constant 00000001
ENABLE_RAM_BANK         Constant 00000001
F                       Constant 00000001
FSR                     Constant 00000004
INDF                    Constant 00000000
PCHBUF                  Constant 0000000A
PCL                     Constant 00000002
STATUS                  Constant 00000003
USEFGOTO                Constant 00000000
W                       Constant 00000000
Z                       Constant 00000002


SOURCE FILE TABLE
001 OBJ/detect.s
002 ny8b062f.inc
003 common.inc
004 detect.c

PROCESSOR    = NY8B062F (8 bits)
PROGRAM ROM  = 0x00000000 - 0x000007FF
DATA ROM     = 0x00000000 - 0x000007FF
RESERVED MEM = 0x00000800 - 0x00000810
SRAM / SFR   = 0x00000000 - 0x00000000
